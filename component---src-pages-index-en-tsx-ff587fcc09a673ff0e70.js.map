{"version":3,"sources":["webpack:///./src/layouts/en.tsx","webpack:///./src/pages/index.en.tsx","webpack:///./src/styles/variables.ts","webpack:///./src/components/Content.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/translations/locales.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.tsx","webpack:///./src/styles/global.ts","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/Main.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/parts/Brand.tsx","webpack:///./src/components/Head.tsx","webpack:///./src/components/parts/TopNavigation.tsx","webpack:///./src/layouts/index.tsx","webpack:///./src/components/sections/Spotlight.tsx"],"names":["addLocaleData","concat","en","EnglishIndexLayout","_ref","children","Object","core_browser_esm","layouts","translation","EnglishTranslation","IndexPage","layouts_en","Spotlight","Content","__webpack_require__","d","__webpack_exports__","dimensions","colors","fonts","baseSize","regular","large","layout","gutter","pageWidth","headerHeight","footerHeight","black","white","dark","red","orange","yellow","contra","sansSerif","StyledContent","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","StyledInnerContent","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","data","query","render","finalData","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","GermanTranslation","language","key","name","messages","subtitle","description","keywords","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","StyledHeader","styled_base_browser_esm","Header","react","globalStyles","css_browser_esm","LayoutRoot","styles","StyledMain","Main","StyledFooter","StyledDivider","Footer","viewBox","points","HomepageLink","Link","Brand","to","injectIntl","intl","title","author","Helmet_default","formatMessage","id","meta","content","lang","StyledNav","StyledList","TopNavigation","IndexLayout","_ref$translation","gatsby_browser_entry","index_es","locale","components_LayoutRoot","components_Head","site","siteMetadata","layouts_StyledHeader","parts_Brand","parts_TopNavigation","components_Main","components_Footer","license","value","Date","buildTime","_1634467168","StyledSpotlightContainer"],"mappings":"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","file":"component---src-pages-index-en-tsx-ff587fcc09a673ff0e70.js","sourcesContent":["import * as React from 'react'\nimport 'modern-normalize'\nimport { EnglishTranslation } from '../translations/locales'\nimport { addLocaleData } from 'react-intl'\nimport * as en from 'react-intl/locale-data/en'\nimport IndexLayout from '.'\n\naddLocaleData([...en])\n\nconst EnglishIndexLayout: React.FC = ({ children }) => <IndexLayout children={children} translation={EnglishTranslation} />\n\nexport default EnglishIndexLayout\n","import * as React from 'react'\n\nimport IndexLayout from '../layouts/en'\nimport Spotlight from '../components/sections/Spotlight'\nimport Content from '../components/Content'\n\nconst IndexPage = () => (\n  <IndexLayout>\n    <Spotlight></Spotlight>\n    <Content>\n      <p>Welcome :)</p>\n    </Content>\n  </IndexLayout>\n)\n\nexport default IndexPage\n","/* eslint-disable max-len */\n\nexport const dimensions = {\n  baseSize: {\n    regular: '16px',\n    large: '18px'\n  },\n  layout: {\n    gutter: '1.5rem',\n    pageWidth: '80rem',\n    headerHeight: '5rem',\n    footerHeight: '4rem'\n  }\n}\n\nexport const colors = {\n  black: '#111111',\n  white: '#EEEEEE',\n  dark: '#6A4A3C',\n  red: '#CC333F',\n  orange: '#EB6841',\n  yellow: '#EDC951',\n  contra: '#00A0B0',\n}\n\nexport const fonts = {\n  sansSerif: \"'Roboto', 'Verdana', 'Ubuntu', sans-serif\"\n}\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions } from '../styles/variables'\n\nconst StyledContent = styled.div`\n  padding: ${dimensions.layout.gutter} calc((100vw - ${dimensions.layout.pageWidth}) / 2);\n  width: 100%;\n`\n\nconst StyledInnerContent = styled.div`\n  padding: 0 ${dimensions.layout.gutter};\n`\n\ninterface ContentProps {\n  className?: string\n}\n\nconst Content: React.FC<ContentProps> = ({ children, className }) => (\n  <>\n    <StyledContent>\n      <StyledInnerContent className={className}>{children}</StyledInnerContent>\n    </StyledContent>\n  </>\n)\n\nexport default Content\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","export const Locales = {\n  de: { key: 'de', name: 'Deutsch' },\n  en: { key: 'en', name: 'English' }\n}\n\nexport interface Translation {\n  language: string\n  messages: { [key: string]: string }\n}\n\nexport const GermanTranslation: Translation = {\n  language: Locales.de.key,\n  messages: {\n    language: 'Deutsch',\n    subtitle: 'Mein Faszikel',\n    description: 'Persönliche Webseite zu den Themen: Informatik, Progressive Webapplikationen (PWA), Softwareentwicklung und vieles mehr.',\n    keywords: 'Informatik, Progressive Webapplikationen, Informatik Schulungen, Experte für Softwareentwicklung, persönlich, engagiert'\n  }\n}\n\nexport const EnglishTranslation: Translation = {\n  language: Locales.en.key,\n  messages: {\n    language: 'Englisch',\n    subtitle: 'My fascicle',\n    description:\n      'Personal website about topics like: information technologies, progressive web applications (PWA), software development and much more.',\n    keywords: 'computer science, progressive web applications, IT teaching, expert for software development'\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions, colors } from '../styles/variables'\nimport Content from './Content'\n\nconst StyledHeader = styled.header`\n  display: flex;\n  align-items: center;\n  height: ${dimensions.layout.headerHeight};\n  background-color: ${colors.dark};\n`\n\ninterface HeaderProps {\n  className?: string\n}\n\nconst Header: React.FC<HeaderProps> = ({ className, children }) => (\n  <>\n    <StyledHeader>\n      <Content className={className}>{children}</Content>\n    </StyledHeader>\n  </>\n)\n\nexport default Header\n","import css from '@emotion/css';\nimport { dimensions, fonts, colors } from './variables'\n\nexport const globalStyles = css`\n  html {\n    height: 100%;\n    font-size: ${dimensions.baseSize.regular};\n    font-family: ${fonts.sansSerif};\n  }\n\n  body {\n    scroll-behavior: smooth;\n    display: flex;\n    min-height: 100%;\n    flex-direction: column;\n    color: ${colors.black};\n  }\n\n  main, a {\n    color: ${colors.white};\n  }\n\n  #___gatsby,\n  #___gatsby > * {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n  }\n`\n","import * as React from 'react'\nimport { Global } from '@emotion/core'\nimport { globalStyles } from '../styles/global'\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.FC<LayoutRootProps> = ({ children }) => (\n  <>\n    <Global styles={globalStyles} />\n    {children}\n  </>\n)\n\nexport default LayoutRoot\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { colors, dimensions } from '../styles/variables'\n\nconst StyledMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  background-color: ${colors.dark};\n  padding-bottom: ${dimensions.layout.gutter};\n`\n\ninterface MainProps {\n  className?: string\n}\n\nconst Main: React.FC<MainProps> = ({ children, className }) => (\n  <>\n    <StyledMain className={className}>{children}</StyledMain>\n  </>\n)\n\nexport default Main\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions, colors } from '../styles/variables'\nimport Content from './Content'\n\nconst StyledFooter = styled.footer`\n  position: relative;\n  height: ${dimensions.layout.footerHeight};\n  background-color: ${colors.orange};\n  display: flex;\n  align-items: center;\n  font-size: 0.8rem;\n`\n\nconst StyledDivider = styled.svg`\n  position: absolute;\n  width: 100%;\n  bottom: 100%;\n  left: 0;\n\n  polygon {\n    fill: ${colors.orange};\n  }\n`\n\ninterface FooterProps {\n  className?: string\n}\n\nconst Footer: React.FC<FooterProps> = ({ className, children }) => (\n  <>\n    <StyledFooter className={className}>\n      <StyledDivider viewBox=\"0 -0.01 100 2\" className=\"topDivider\">\n        <polygon points=\"0 2, 80 0, 100 2\"></polygon>\n      </StyledDivider>\n      <Content>{children}</Content>\n    </StyledFooter>\n  </>\n)\n\nexport default Footer\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\nimport { colors } from '../../styles/variables'\n\nconst HomepageLink = styled(Link)`\n  display: block;\n  color: ${colors.white};\n  font-size: 1.5rem;\n  font-weight: 600;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    span {\n      opacity: 1;\n      margin-left: 0;\n    }\n  }\n\n  span {\n    opacity: 0;\n    margin-left: -1rem;\n    transition: 0.5s;\n  }\n`\n\ninterface BrandProps {}\n\nconst Brand: React.FC<BrandProps> = () => (\n  <>\n    <h1>\n      <HomepageLink to=\"/\">\n        r.obin<span>.ch</span>\n      </HomepageLink>\n    </h1>\n  </>\n)\n\nexport default Brand\n","import * as React from 'react'\nimport { InjectedIntlProps, injectIntl } from 'react-intl'\nimport Helmet from 'react-helmet'\n\ninterface HeadProps extends InjectedIntlProps {\n  language: string\n  title: string\n  author: string\n}\n\nconst Head: React.FC<HeadProps> = ({ intl, language, title, author }) => (\n  <>\n    <Helmet\n      title={`${intl.formatMessage({ id: 'subtitle' })} - ${title}`}\n      meta={[\n        { name: 'description', content: intl.formatMessage({ id: 'description' }) },\n        { name: 'keywords', content: intl.formatMessage({ id: 'keywords' }) },\n        { name: 'author', content: author }\n      ]}\n    >\n      <html lang={language} />\n    </Helmet>\n  </>\n)\n\nexport default injectIntl(Head)\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions } from '../../styles/variables'\n\ninterface TopNavigationProps {\n  className?: string\n}\n\nconst StyledNav = styled.nav`\n  display: flex;\n  align-items: center;\n`\n\nconst StyledList = styled.ul`\n  display: flex;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n\n  li {\n    margin-left: ${dimensions.layout.gutter};\n  }\n`\n\nconst TopNavigation: React.FC<TopNavigationProps> = ({ className }) => (\n  <StyledNav className={className}>\n    <StyledList>\n      <li>Über mich</li>\n      <li>Projekte</li>\n      <li>Aufnahmen</li>\n      <li>Weblog</li>\n      <li>Sammlung</li>\n    </StyledList>\n  </StyledNav>\n)\n\nexport default TopNavigation\n","import * as React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'modern-normalize'\n\nimport Header from '../components/Header'\nimport LayoutRoot from '../components/LayoutRoot'\nimport Main from '../components/Main'\nimport Footer from '../components/Footer'\nimport { IntlProvider, FormattedDate, FormattedTime } from 'react-intl'\nimport { Translation, EnglishTranslation } from '../translations/locales'\nimport Brand from '../components/parts/Brand'\nimport Head from '../components/Head'\nimport TopNavigation from '../components/parts/TopNavigation'\nimport styled from '@emotion/styled'\n\ninterface StaticQueryProps {\n  site: {\n    siteMetadata: {\n      title: string\n      license: string\n      author: {\n        name: string\n      }\n    }\n    buildTime: string\n  }\n}\n\ninterface Props {\n  translation?: Translation\n}\n\nconst StyledHeader = styled(Header)`\n  display: flex;\n  justify-content: space-between;\n`\n\nconst IndexLayout: React.FC<Props> = ({ children, translation = EnglishTranslation }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            license\n            author {\n              name\n            }\n          }\n          buildTime\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <IntlProvider locale={translation.language} messages={translation.messages}>\n        <LayoutRoot>\n          <Head language={translation.language} title={data.site.siteMetadata.title} author={data.site.siteMetadata.author.name} />\n          <StyledHeader>\n            <Brand />\n            <TopNavigation />\n          </StyledHeader>\n          <Main>{children}</Main>\n          <Footer>\n            {data.site.siteMetadata.license} - <FormattedDate value={new Date(data.site.buildTime)} />{' '}\n            <FormattedTime value={new Date(data.site.buildTime)} />\n          </Footer>\n        </LayoutRoot>\n      </IntlProvider>\n    )}\n  />\n)\n\nexport default IndexLayout\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { colors } from '../../styles/variables'\n\nconst StyledSpotlightContainer = styled.div`\n  position: relative;\n  min-height: 20rem;\n  height: 50vh;\n  background-color: ${colors.white};\n  color: ${colors.black};\n  overflow: hidden;\n`\n\nconst StyledDivider = styled.svg`\n  position: absolute;\n  margin: 0 -1px;\n\n  &.topDivider {\n    top: 0;\n    left: 0;\n  }\n\n  &.bottomDivider {\n    bottom: 0;\n    left: 0;\n  }\n\n  polygon {\n    fill: ${colors.dark};\n  }\n`\n\ninterface SpotlightProps {\n  className?: string\n}\n\nconst Spotlight: React.FC<SpotlightProps> = ({ className }) => (\n  <StyledSpotlightContainer className={className}>\n    <StyledDivider viewBox=\"0 0 100 2\" className=\"topDivider\">\n      <polygon points=\"0 0, 100 0, 100 2, 20 0, 0 2\"></polygon>\n    </StyledDivider>\n    <div>\n      Lorem, ipsum dolor sit amet consectetur adipisicing elit. Odio animi doloribus possimus voluptas deserunt magnam. Dolore non culpa\n      fugiat in commodi facere expedita blanditiis deleniti odio, veniam exercitationem ab ipsam.\n    </div>\n    <StyledDivider viewBox=\"0 0 100 2\" className=\"bottomDivider\">\n      <polygon points=\"0 0, 80 2, 100 0, 100 2, 0 100\"></polygon>\n    </StyledDivider>\n  </StyledSpotlightContainer>\n)\n\nexport default Spotlight\n"],"sourceRoot":""}