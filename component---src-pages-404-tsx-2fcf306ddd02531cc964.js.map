{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/styles/variables.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Content.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/translations/locales.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.tsx","webpack:///./src/styles/global.ts","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/Main.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/parts/Brand.tsx","webpack:///./src/components/Head.tsx","webpack:///./src/components/sections/Navigation.tsx","webpack:///./src/components/parts/TopNavigation.tsx","webpack:///./src/layouts/index.tsx"],"names":["NotFoundPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts__WEBPACK_IMPORTED_MODULE_3__","_components_Content__WEBPACK_IMPORTED_MODULE_4__","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","__webpack_require__","d","__webpack_exports__","dimensions","colors","fonts","baseSize","regular","large","layout","gutter","pageWidth","headerHeight","footerHeight","black","white","dark","red","orange","yellow","contra","sansSerif","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","StyledContent","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","StyledInnerContent","Content","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","m","module","exports","require","default","GermanTranslation","EnglishTranslation","language","key","name","messages","subtitle","description","keywords","navigation.about","navigation.projects","navigation.recordings","navigation.blog","navigation.collection","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","StyledHeader","styled_base_browser_esm","Header","core_browser_esm","react","globalStyles","css_browser_esm","LayoutRoot","styles","StyledMain","Main","StyledFooter","StyledDivider","Footer","viewBox","points","HomepageLink","Link","Brand","injectIntl","intl","title","author","Helmet_default","formatMessage","id","meta","content","lang","StyledNav","StyledList","Navigation","MenuItem","TopNavigation","sections_Navigation","gatsby_browser_entry","index_es","IndexLayout","_ref$translation","translation","locale","components_LayoutRoot","components_Head","site","siteMetadata","layouts_StyledHeader","parts_Brand","parts_TopNavigation","components_Main","components_Footer","license","value","Date","buildTime","_1634467168"],"mappings":"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","file":"component---src-pages-404-tsx-2fcf306ddd02531cc964.js","sourcesContent":["import * as React from 'react'\nimport { Link } from 'gatsby'\n\nimport IndexLayout from '../layouts'\nimport Content from '../components/Content'\n\nconst NotFoundPage = () => (\n  <IndexLayout>\n    <Content>\n      <h1>404: Page not found.</h1>\n      <p>\n        You've hit the void. <Link to=\"/\">Go back.</Link>\n      </p>\n    </Content>\n  </IndexLayout>\n)\n\nexport default NotFoundPage\n","/* eslint-disable max-len */\n\nexport const dimensions = {\n  baseSize: {\n    regular: '16px',\n    large: '18px'\n  },\n  layout: {\n    gutter: '1.5rem',\n    pageWidth: '80rem',\n    headerHeight: '5rem',\n    footerHeight: '4rem'\n  }\n}\n\nexport const colors = {\n  black: '#111111',\n  white: '#EEEEEE',\n  dark: '#6A4A3C',\n  red: '#CC333F',\n  orange: '#EB6841',\n  yellow: '#EDC951',\n  contra: '#00A0B0',\n}\n\nexport const fonts = {\n  sansSerif: \"'Roboto', 'Verdana', 'Ubuntu', sans-serif\"\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions } from '../styles/variables'\n\nconst StyledContent = styled.div`\n  padding: ${dimensions.layout.gutter} calc((100vw - ${dimensions.layout.pageWidth}) / 2);\n  width: 100%;\n`\n\nconst StyledInnerContent = styled.div`\n  padding: 0 ${dimensions.layout.gutter};\n`\n\ninterface ContentProps {\n  className?: string\n}\n\nconst Content: React.FC<ContentProps> = ({ children, className }) => (\n  <>\n    <StyledContent>\n      <StyledInnerContent className={className}>{children}</StyledInnerContent>\n    </StyledContent>\n  </>\n)\n\nexport default Content\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","export const Locales = {\n  de: { key: 'de', name: 'Deutsch' },\n  en: { key: 'en', name: 'English' }\n}\n\nexport interface Translation {\n  language: string\n  messages: { [key: string]: string }\n}\n\nexport const GermanTranslation: Translation = {\n  language: Locales.de.key,\n  messages: {\n    language: 'Deutsch',\n    subtitle: 'Mein Faszikel',\n    description: 'Persönliche Webseite zu den Themen: Informatik, Progressive Webapplikationen (PWA), Softwareentwicklung und vieles mehr.',\n    keywords: 'Informatik, Progressive Webapplikationen, Informatik Schulungen, Experte für Softwareentwicklung, persönlich, engagiert',\n    'navigation.about': 'Über mich',\n    'navigation.projects': 'Projekte',\n    'navigation.recordings': 'Aufnahmen',\n    'navigation.blog': 'Blog',\n    'navigation.collection': 'Sammlung'\n  }\n}\n\nexport const EnglishTranslation: Translation = {\n  language: Locales.en.key,\n  messages: {\n    language: 'Englisch',\n    subtitle: 'My fascicle',\n    description:\n      'Personal website about topics like: information technologies, progressive web applications (PWA), software development and much more.',\n    keywords: 'computer science, progressive web applications, IT teaching, expert for software development',\n    'navigation.about': 'About me',\n    'navigation.projects': 'Projects',\n    'navigation.recordings': 'Recordings',\n    'navigation.blog': 'Blog',\n    'navigation.collection': 'Collection'\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions, colors } from '../styles/variables'\nimport Content from './Content'\n\nconst StyledHeader = styled.header`\n  display: flex;\n  align-items: center;\n  height: ${dimensions.layout.headerHeight};\n  background-color: ${colors.dark};\n`\n\ninterface HeaderProps {\n  className?: string\n}\n\nconst Header: React.FC<HeaderProps> = ({ className, children }) => (\n  <>\n    <StyledHeader>\n      <Content className={className}>{children}</Content>\n    </StyledHeader>\n  </>\n)\n\nexport default Header\n","import css from '@emotion/css';\nimport { dimensions, fonts, colors } from './variables'\n\nexport const globalStyles = css`\n  html {\n    height: 100%;\n    font-size: ${dimensions.baseSize.regular};\n    font-family: ${fonts.sansSerif};\n  }\n\n  body {\n    scroll-behavior: smooth;\n    display: flex;\n    min-height: 100%;\n    flex-direction: column;\n    color: ${colors.black};\n  }\n\n  main, a {\n    color: ${colors.white};\n  }\n\n  #___gatsby,\n  #___gatsby > * {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n  }\n`\n","import * as React from 'react'\nimport { Global } from '@emotion/core'\nimport { globalStyles } from '../styles/global'\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.FC<LayoutRootProps> = ({ children }) => (\n  <>\n    <Global styles={globalStyles} />\n    {children}\n  </>\n)\n\nexport default LayoutRoot\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { colors, dimensions } from '../styles/variables'\n\nconst StyledMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  background-color: ${colors.dark};\n  padding-bottom: ${dimensions.layout.gutter};\n`\n\ninterface MainProps {\n  className?: string\n}\n\nconst Main: React.FC<MainProps> = ({ children, className }) => (\n  <>\n    <StyledMain className={className}>{children}</StyledMain>\n  </>\n)\n\nexport default Main\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions, colors } from '../styles/variables'\nimport Content from './Content'\n\nconst StyledFooter = styled.footer`\n  position: relative;\n  height: ${dimensions.layout.footerHeight};\n  background-color: ${colors.orange};\n  display: flex;\n  align-items: center;\n  font-size: 0.8rem;\n`\n\nconst StyledDivider = styled.svg`\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  bottom: 100%;\n  left: 0;\n\n  polygon {\n    fill: ${colors.orange};\n  }\n`\n\ninterface FooterProps {\n  className?: string\n}\n\nconst Footer: React.FC<FooterProps> = ({ className, children }) => (\n  <>\n    <StyledFooter className={className}>\n      <StyledDivider viewBox=\"0 -0.01 100 2\" className=\"topDivider\">\n        <polygon points=\"0 2, 80 0, 100 2\"></polygon>\n      </StyledDivider>\n      <Content>{children}</Content>\n    </StyledFooter>\n  </>\n)\n\nexport default Footer\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\nimport { colors } from '../../styles/variables'\n\nconst HomepageLink = styled(Link)`\n  display: block;\n  color: ${colors.white};\n  font-size: 1.5rem;\n  font-weight: 600;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    span {\n      opacity: 1;\n      margin-left: 0;\n    }\n  }\n\n  span {\n    opacity: 0;\n    margin-left: -1rem;\n    transition: 0.5s;\n  }\n`\n\ninterface BrandProps {}\n\nconst Brand: React.FC<BrandProps> = () => (\n  <>\n    <h1>\n      <HomepageLink to=\"/\">\n        r.obin<span>.ch</span>\n      </HomepageLink>\n    </h1>\n  </>\n)\n\nexport default Brand\n","import * as React from 'react'\nimport { InjectedIntlProps, injectIntl } from 'react-intl'\nimport Helmet from 'react-helmet'\n\ninterface HeadProps extends InjectedIntlProps {\n  language: string\n  title: string\n  author: string\n}\n\nconst Head: React.FC<HeadProps> = ({ intl, language, title, author }) => (\n  <>\n    <Helmet\n      title={`${intl.formatMessage({ id: 'subtitle' })} - ${title}`}\n      meta={[\n        { name: 'description', content: intl.formatMessage({ id: 'description' }) },\n        { name: 'keywords', content: intl.formatMessage({ id: 'keywords' }) },\n        { name: 'author', content: author }\n      ]}\n    >\n      <html lang={language} />\n    </Helmet>\n  </>\n)\n\nexport default injectIntl(Head)\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\ninterface Navigation {\n  className?: string\n}\n\nconst StyledNav = styled.nav`\n  display: flex;\n  align-items: center;\n`\n\nconst StyledList = styled.ul`\n  display: flex;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`\n\nconst Navigation: React.FC<Navigation> = ({ className, children }) => (\n  <StyledNav>\n    <StyledList className={className}>{children}</StyledList>\n  </StyledNav>\n)\n\nexport default Navigation\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions, colors } from '../../styles/variables'\nimport Navigation from '../sections/Navigation'\nimport { FormattedMessage } from 'react-intl'\nimport { Link } from 'gatsby'\n\ninterface TopNavigationProps {\n  className?: string\n}\n\nconst MenuItem = styled.li`\n  margin-left: calc(${dimensions.layout.gutter} / 2);\n\n  a {\n    display: block;\n    text-decoration: none;\n    padding: calc(${dimensions.layout.gutter} / 2);\n    background-color: rgba(255, 255, 255, 0.1);\n    outline: 2px solid transparent;\n\n    &:hover {\n      outline: 2px solid ${colors.white};\n    }\n  }\n`\n\nconst TopNavigation: React.FC<TopNavigationProps> = ({ className }) => (\n  <Navigation className={className}>\n    <MenuItem>\n      <Link to=\"/about\">\n        <FormattedMessage id=\"navigation.about\" />\n      </Link>\n    </MenuItem>\n    <MenuItem>\n      <Link to=\"/projects\">\n        <FormattedMessage id=\"navigation.projects\" />\n      </Link>\n    </MenuItem>\n    <MenuItem>\n      <Link to=\"/recordings\">\n        <FormattedMessage id=\"navigation.recordings\" />\n      </Link>\n    </MenuItem>\n    <MenuItem>\n      <Link to=\"/blog\">\n        <FormattedMessage id=\"navigation.blog\" />\n      </Link>\n    </MenuItem>\n    <MenuItem>\n      <Link to=\"/collection\">\n        <FormattedMessage id=\"navigation.collection\" />\n      </Link>\n    </MenuItem>\n  </Navigation>\n)\n\nexport default TopNavigation\n","import * as React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'modern-normalize'\n\nimport Header from '../components/Header'\nimport LayoutRoot from '../components/LayoutRoot'\nimport Main from '../components/Main'\nimport Footer from '../components/Footer'\nimport { IntlProvider, FormattedDate, FormattedTime } from 'react-intl'\nimport { Translation, EnglishTranslation } from '../translations/locales'\nimport Brand from '../components/parts/Brand'\nimport Head from '../components/Head'\nimport TopNavigation from '../components/parts/TopNavigation'\nimport styled from '@emotion/styled'\n\ninterface StaticQueryProps {\n  site: {\n    siteMetadata: {\n      title: string\n      license: string\n      author: {\n        name: string\n      }\n    }\n    buildTime: string\n  }\n}\n\ninterface Props {\n  translation?: Translation\n}\n\nconst StyledHeader = styled(Header)`\n  display: flex;\n  justify-content: space-between;\n`\n\nconst IndexLayout: React.FC<Props> = ({ children, translation = EnglishTranslation }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            license\n            author {\n              name\n            }\n          }\n          buildTime\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <IntlProvider locale={translation.language} messages={translation.messages}>\n        <LayoutRoot>\n          <Head language={translation.language} title={data.site.siteMetadata.title} author={data.site.siteMetadata.author.name} />\n          <StyledHeader>\n            <Brand />\n            <TopNavigation />\n          </StyledHeader>\n          <Main>{children}</Main>\n          <Footer>\n            {data.site.siteMetadata.license} - <FormattedDate value={new Date(data.site.buildTime)} />{' '}\n            <FormattedTime value={new Date(data.site.buildTime)} />\n          </Footer>\n        </LayoutRoot>\n      </IntlProvider>\n    )}\n  />\n)\n\nexport default IndexLayout\n"],"sourceRoot":""}