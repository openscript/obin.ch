{"version":3,"sources":["webpack:///./src/templates/page.tsx","webpack:///./src/styles/variables.ts","webpack:///./src/components/Content.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/translations/locales.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.tsx","webpack:///./src/styles/global.ts","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/Main.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/parts/Brand.tsx","webpack:///./src/components/Head.tsx","webpack:///./src/layouts/index.tsx","webpack:///./src/components/Page.tsx","webpack:///./src/components/Container.tsx"],"names":["PageTemplate","_ref","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts__WEBPACK_IMPORTED_MODULE_4__","_components_Page__WEBPACK_IMPORTED_MODULE_2__","_components_Container__WEBPACK_IMPORTED_MODULE_3__","markdownRemark","frontmatter","title","dangerouslySetInnerHTML","__html","html","query","__webpack_require__","d","__webpack_exports__","dimensions","colors","fonts","baseSize","regular","large","layout","gutter","pageWidth","headerHeight","footerHeight","white","dark","red","orange","yellow","contra","sansSerif","StyledContent","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","StyledInnerContent","Content","children","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","GermanTranslation","EnglishTranslation","language","key","name","messages","subtitle","description","keywords","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","StyledHeader","styled_base_browser_esm","Header","core_browser_esm","react","globalStyles","css_browser_esm","LayoutRoot","styles","StyledMain","Main","StyledFooter","StyledDivider","Footer","viewBox","points","HomepageLink","Link","Brand","to","injectIntl","intl","author","Helmet_default","formatMessage","id","meta","content","lang","IndexLayout","_ref$translation","translation","gatsby_browser_entry","index_es","locale","components_LayoutRoot","components_Head","site","siteMetadata","components_Header","parts_Brand","components_Main","components_Footer","license","value","Date","buildTime","_1634467168","StyledPage","Page","StyledContainer","Container"],"mappings":"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","file":"component---src-templates-page-tsx-375a56d8295cdc06d713.js","sourcesContent":["import * as React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport IndexLayout from '../layouts'\n\ninterface PageTemplateProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        author: {\n          name: string\n          url: string\n        }\n      }\n    }\n    markdownRemark: {\n      html: string\n      excerpt: string\n      frontmatter: {\n        title: string\n      }\n    }\n  }\n}\n\nconst PageTemplate: React.FC<PageTemplateProps> = ({ data }) => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>{data.markdownRemark.frontmatter.title}</h1>\n        {/* eslint-disable-next-line react/no-danger */}\n        <div dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }} />\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default PageTemplate\n\nexport const query = graphql`\n  query PageTemplateQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n        author {\n          name\n          url\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","/* eslint-disable max-len */\n\nexport const dimensions = {\n  baseSize: {\n    regular: '16px',\n    large: '18px'\n  },\n  layout: {\n    gutter: '1.5rem',\n    pageWidth: '80rem',\n    headerHeight: '8rem',\n    footerHeight: '5rem'\n  }\n}\n\nexport const colors = {\n  white: '#EEEEEE',\n  dark: '#6A4A3C',\n  red: '#CC333F',\n  orange: '#EB6841',\n  yellow: '#EDC951',\n  contra: '#00A0B0',\n}\n\nexport const fonts = {\n  sansSerif: \"'Roboto', 'Verdana', 'Ubuntu', sans-serif\"\n}\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions } from '../styles/variables'\n\nconst StyledContent = styled.div`\n  padding: ${dimensions.layout.gutter} calc((100vw - ${dimensions.layout.pageWidth}) / 2);\n`\n\nconst StyledInnerContent = styled.div`\n  padding: 0 ${dimensions.layout.gutter};\n`\n\ninterface ContentProps {\n  className?: string\n}\n\nconst Content: React.FC<ContentProps> = ({ children, className }) => (\n  <>\n    <StyledContent className={className}>\n      <StyledInnerContent>{children}</StyledInnerContent>\n    </StyledContent>\n  </>\n)\n\nexport default Content\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","export const Locales = {\n  de: { key: 'de', name: 'Deutsch' },\n  en: { key: 'en', name: 'English' }\n}\n\nexport interface Translation {\n  language: string\n  messages: { [key: string]: string }\n}\n\nexport const GermanTranslation: Translation = {\n  language: Locales.de.key,\n  messages: {\n    language: 'Deutsch',\n    subtitle: 'Mein Faszikel',\n    description: 'Persönliche Webseite zu den Themen: Informatik, Progressive Webapplikationen (PWA), Softwareentwicklung und vieles mehr.',\n    keywords: 'Informatik, Progressive Webapplikationen, Informatik Schulungen, Experte für Softwareentwicklung, persönlich, engagiert'\n  }\n}\n\nexport const EnglishTranslation: Translation = {\n  language: Locales.en.key,\n  messages: {\n    language: 'Englisch',\n    subtitle: 'My fascicle',\n    description:\n      'Personal website about topics like: information technologies, progressive web applications (PWA), software development and much more.',\n    keywords: 'computer science, progressive web applications, IT teaching, expert for software development'\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions, colors } from '../styles/variables'\nimport Content from './Content'\n\nconst StyledHeader = styled.header`\n  display: flex;\n  align-items: center;\n  height: ${dimensions.layout.headerHeight};\n  background-color: ${colors.dark};\n`\n\ninterface HeaderProps {}\n\nconst Header: React.FC<HeaderProps> = ({ children }) => (\n  <>\n    <StyledHeader>\n      <Content>{children}</Content>\n    </StyledHeader>\n  </>\n)\n\nexport default Header\n","import css from '@emotion/css';\nimport { dimensions, fonts } from './variables'\n\nexport const globalStyles = css`\n  html {\n    height: 100%;\n    font-size: ${dimensions.baseSize.regular};\n    font-family: ${fonts.sansSerif};\n  }\n\n  body {\n    display: flex;\n    min-height: 100%;\n    flex-direction: column;\n  }\n\n  #___gatsby,\n  #___gatsby > * {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n  }\n`\n","import * as React from 'react'\nimport { Global } from '@emotion/core'\nimport { globalStyles } from '../styles/global'\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.FC<LayoutRootProps> = ({ children }) => (\n  <>\n    <Global styles={globalStyles} />\n    {children}\n  </>\n)\n\nexport default LayoutRoot\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { colors } from '../styles/variables'\n\nconst StyledMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  background-color: ${colors.dark};\n`\n\ninterface MainProps {\n  className?: string\n}\n\nconst Main: React.FC<MainProps> = ({ children, className }) => (\n  <>\n    <StyledMain className={className}>{children}</StyledMain>\n  </>\n)\n\nexport default Main\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions, colors } from '../styles/variables'\nimport Content from './Content'\n\nconst StyledFooter = styled.footer`\n  position: relative;\n  height: ${dimensions.layout.footerHeight};\n  background-color: ${colors.orange};\n  display: flex;\n  align-items: center;\n  font-size: 0.8rem;\n`\n\nconst StyledDivider = styled.svg`\n  position: absolute;\n  width: 100%;\n  bottom: 100%;\n  left: 0;\n\n  polygon {\n    fill: ${colors.orange};\n  }\n`\n\ninterface FooterProps {\n  className?: string\n}\n\nconst Footer: React.FC<FooterProps> = ({ className, children }) => (\n  <>\n    <StyledFooter className={className}>\n      <StyledDivider viewBox=\"0 0 100 2\" className=\"topDivider\">\n        <polygon points=\"0 2, 80 0, 100 2\"></polygon>\n      </StyledDivider>\n      <Content>{children}</Content>\n    </StyledFooter>\n  </>\n)\n\nexport default Footer\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\nconst HomepageLink = styled(Link)`\n  color: white;\n  font-size: 1.5rem;\n  font-weight: 600;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    span {\n      opacity: 1;\n      margin-left: 0;\n    }\n  }\n\n  span {\n    opacity: 0;\n    margin-left: -1rem;\n    transition: 0.5s;\n  }\n`\n\ninterface BrandProps {}\n\nconst Brand: React.FC<BrandProps> = () => (\n  <>\n    <h1>\n      <HomepageLink to=\"/\">\n        r.obin<span>.ch</span>\n      </HomepageLink>\n    </h1>\n  </>\n)\n\nexport default Brand\n","import * as React from 'react'\nimport { InjectedIntlProps, injectIntl } from 'react-intl'\nimport Helmet from 'react-helmet'\n\ninterface HeadProps extends InjectedIntlProps {\n  language: string\n  title: string\n  author: string\n}\n\nconst Head: React.FC<HeadProps> = ({ intl, language, title, author }) => (\n  <>\n    <Helmet\n      title={`${intl.formatMessage({ id: 'subtitle' })} - ${title}`}\n      meta={[\n        { name: 'description', content: intl.formatMessage({ id: 'description' }) },\n        { name: 'keywords', content: intl.formatMessage({ id: 'keywords' }) },\n        { name: 'author', content: author }\n      ]}\n    >\n      <html lang={language} />\n    </Helmet>\n  </>\n)\n\nexport default injectIntl(Head)\n","import * as React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'modern-normalize'\n\nimport Header from '../components/Header'\nimport LayoutRoot from '../components/LayoutRoot'\nimport Main from '../components/Main'\nimport Footer from '../components/Footer'\nimport { IntlProvider, FormattedDate, FormattedTime } from 'react-intl'\nimport { Translation, EnglishTranslation } from '../translations/locales'\nimport Brand from '../components/parts/Brand'\nimport Head from '../components/Head'\n\ninterface StaticQueryProps {\n  site: {\n    siteMetadata: {\n      title: string\n      license: string\n      author: {\n        name: string\n      }\n    }\n    buildTime: string\n  }\n}\n\ninterface Props {\n  translation?: Translation\n}\n\nconst IndexLayout: React.FC<Props> = ({ children, translation = EnglishTranslation }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            license\n            author {\n              name\n            }\n          }\n          buildTime\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <IntlProvider locale={translation.language} messages={translation.messages}>\n        <LayoutRoot>\n          <Head language={translation.language} title={data.site.siteMetadata.title} author={data.site.siteMetadata.author.name} />\n          <Header>\n            <Brand />\n          </Header>\n          <Main>{children}</Main>\n          <Footer>\n            {data.site.siteMetadata.license} - <FormattedDate value={new Date(data.site.buildTime)} />{' '}\n            <FormattedTime value={new Date(data.site.buildTime)} />\n          </Footer>\n        </LayoutRoot>\n      </IntlProvider>\n    )}\n  />\n)\n\nexport default IndexLayout\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  margin-bottom: 3rem;\n`\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\n\nexport default Page\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n`\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.FC<ContainerProps> = ({ children, className }) => <StyledContainer className={className}>{children}</StyledContainer>\n\nexport default Container\n"],"sourceRoot":""}