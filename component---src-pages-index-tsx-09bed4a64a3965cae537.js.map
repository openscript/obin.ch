{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/styles/variables.ts","webpack:///./src/components/Header.tsx","webpack:///./src/styles/global.ts","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/Main.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/layouts/index.tsx"],"names":["IndexPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts__WEBPACK_IMPORTED_MODULE_2__","dimensions","regular","large","gutter","pageWidth","headerHeight","footerHeight","colors","StyledHeader","styled_base_browser_esm","target","HomepageLink","Link","name","styles","StyledDivider","Header","_ref","title","core_browser_esm","react","to","viewBox","points","globalStyles","css_browser_esm","LayoutRoot","children","StyledMain","Main","className","StyledFooter","Footer","Footer_StyledDivider","Date","toISOString","IndexLayout","gatsby_browser_entry","query","render","data","components_LayoutRoot","Helmet_default","a","site","siteMetadata","meta","content","description","keywords","components_Header","components_Main","components_Footer","_3113665618"],"mappings":"4HAUeA,UANG,kBAChBC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAAA,+TCJSG,EACD,CACRC,QAAS,OACTC,MAAO,QAHEF,EAKH,CACNG,OAAQ,SACRC,UAAW,QACXC,aAAc,OACdC,aAAc,QAILC,EACL,UCXFC,EAAeX,OAAAY,EAAA,EAAAZ,CAAA,UAAHa,OAAA,aAAGb,CAAH,4BAENG,EAAkBK,aAFZ,qBAGIE,EAHJ,KAMZI,EAAed,OAAAY,EAAA,EAAAZ,CAAOe,OAAP,CAAAF,OAAA,aAAAb,CAAH,CAAAgB,KAAA,SAAAC,OAAA,wFAWZC,EAAgBlB,OAAAY,EAAA,EAAAZ,CAAA,OAAHa,OAAA,aAAGb,CAAH,2BAIPU,EAJO,MAuBJS,EAXuB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OACpCrB,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAA,cACEvB,OAAAsB,EAAA,EAAAtB,CAACW,EAAD,KACEX,OAAAsB,EAAA,EAAAtB,CAACc,EAAD,CAAcU,GAAG,KAAKH,IAExBrB,OAAAsB,EAAA,EAAAtB,CAACkB,EAAD,CAAeO,QAAQ,aACrBzB,OAAAsB,EAAA,EAAAtB,CAAA,WAAS0B,OAAO,4CCrCTC,EAAY3B,OAAA4B,EAAA,EAAA5B,CAAA,8BAGRG,EAAoBC,QAHZ,gBFqBZ,4CErBY,mKAuBVD,EAAkBG,OAvBR,kBAuBgCH,EAAkBI,UAvBlD,YCYVsB,EAP+B,SAAAT,GAAA,IAAGU,EAAHV,EAAGU,SAAH,OAC5C9B,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAA,cACEvB,OAAAsB,EAAA,EAAAtB,CAACsB,EAAA,EAAD,CAAQL,OAAQU,IACfG,ICRCC,EAAa/B,OAAAY,EAAA,EAAAZ,CAAA,QAAHa,OAAA,YAAGb,CAAH,CAAAgB,KAAA,UAAAC,OAAA,oDAYDe,EAFmB,SAAAZ,GAAA,IAAGU,EAAHV,EAAGU,SAAUG,EAAbb,EAAaa,UAAb,OAA6BjC,OAAAsB,EAAA,EAAAtB,CAAC+B,EAAD,CAAYE,UAAWA,GAAYH,ICT5FI,EAAelC,OAAAY,EAAA,EAAAZ,CAAA,UAAHa,OAAA,aAAGb,CAAH,4BAENG,EAAkBM,aAFZ,qBAGIC,EAHJ,KAMZQ,EAAgBlB,OAAAY,EAAA,EAAAZ,CAAA,OAAHa,OAAA,aAAGb,CAAH,2BAIPU,EAJO,MAqBJyB,EATuB,SAAAf,GAAA,IAAGa,EAAHb,EAAGa,UAAH,OACpCjC,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAA,cACEvB,OAAAsB,EAAA,EAAAtB,CAACoC,EAAD,CAAeX,QAAQ,aACrBzB,OAAAsB,EAAA,EAAAtB,CAAA,WAAS0B,OAAO,oCAElB1B,OAAAsB,EAAA,EAAAtB,CAACkC,EAAD,CAAcD,UAAWA,IAAY,IAAII,MAAOC,iBCwBrCC,IA9Be,SAAAnB,GAAA,IAAGU,EAAHV,EAAGU,SAAH,OAC5B9B,OAAAsB,EAAA,EAAAtB,CAACwC,EAAA,YAAD,CACEC,MAAK,aAWLC,OAAQ,SAACC,GAAD,OACN3C,OAAAsB,EAAA,EAAAtB,CAAC4C,EAAD,KACE5C,OAAAsB,EAAA,EAAAtB,CAAC6C,EAAAC,EAAD,CACEzB,MAAOsB,EAAKI,KAAKC,aAAa3B,MAC9B4B,KAAM,CACJ,CAAEjC,KAAM,cAAekC,QAASP,EAAKI,KAAKC,aAAaG,aACvD,CAAEnC,KAAM,WAAYkC,QAASP,EAAKI,KAAKC,aAAaI,aAGxDpD,OAAAsB,EAAA,EAAAtB,CAACqD,EAAD,CAAQhC,MAAOsB,EAAKI,KAAKC,aAAa3B,QACtCrB,OAAAsB,EAAA,EAAAtB,CAACsD,EAAD,KAAOxB,GACP9B,OAAAsB,EAAA,EAAAtB,CAACuD,EAAD,QAvBNZ,KAAAa","file":"component---src-pages-index-tsx-09bed4a64a3965cae537.js","sourcesContent":["import * as React from 'react'\n\nimport IndexLayout from '../layouts'\n\nconst IndexPage = () => (\n  <IndexLayout>\n    <p>Willkommen :)</p>\n  </IndexLayout>\n)\n\nexport default IndexPage\n","/* eslint-disable max-len */\n\nexport const dimensions = {\n  baseSize: {\n    regular: '16px',\n    large: '18px'\n  },\n  layout: {\n    gutter: '1.5rem',\n    pageWidth: '80rem',\n    headerHeight: '8rem',\n    footerHeight: '5rem'\n  }\n}\n\nexport const colors = {\n  dark: '#6A4A3C',\n  red: '#CC333F',\n  orange: '#EB6841',\n  yellow: '#EDC951',\n  contra: '#00A0B0',\n}\n\nexport const fonts = {\n  sansSerif: \"'Roboto', 'Verdana', 'Ubuntu', sans-serif\"\n}\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\nimport { dimensions, colors } from '../styles/variables'\n\nconst StyledHeader = styled.header`\n  position: relative;\n  height: ${dimensions.layout.headerHeight};\n  background-color: ${colors.dark};\n`\n\nconst HomepageLink = styled(Link)`\n  color: white;\n  font-size: 1.5rem;\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n  }\n`\n\nconst StyledDivider = styled.svg`\n  width: 100%;\n\n  polygon {\n    fill: ${colors.dark};\n  }\n`\n\ninterface HeaderProps {\n  title: string\n}\n\nconst Header: React.FC<HeaderProps> = ({ title }) => (\n  <>\n    <StyledHeader>\n      <HomepageLink to=\"/\">{title}</HomepageLink>\n    </StyledHeader>\n    <StyledDivider viewBox=\"0 0 100 2\">\n      <polygon points=\"0 0, 100 0, 100 2, 20 0, 0 2\"></polygon>\n    </StyledDivider>\n  </>\n)\n\nexport default Header\n","import css from '@emotion/css';\nimport { dimensions, fonts } from './variables'\n\nexport const globalStyles = css`\n  html {\n    height: 100%;\n    font-size: ${dimensions.baseSize.regular};\n    font-family: ${fonts.sansSerif};\n  }\n\n  body {\n    display: flex;\n    min-height: 100%;\n    flex-direction: column;\n  }\n\n  #___gatsby,\n  #___gatsby > * {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n  }\n\n  header,\n  main,\n  footer {\n    padding: ${dimensions.layout.gutter} calc((100vw - ${dimensions.layout.pageWidth}) / 2);\n  }\n`\n","import * as React from 'react'\nimport { Global } from '@emotion/core'\nimport { globalStyles } from '../styles/global'\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.FC<LayoutRootProps> = ({ children }) => (\n  <>\n    <Global styles={globalStyles} />\n    {children}\n  </>\n)\n\nexport default LayoutRoot\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n`\n\ninterface MainProps {\n  className?: string\n}\n\nconst Main: React.FC<MainProps> = ({ children, className }) => <StyledMain className={className}>{children}</StyledMain>\n\nexport default Main\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions, colors } from '../styles/variables'\n\nconst StyledFooter = styled.footer`\n  position: relative;\n  height: ${dimensions.layout.footerHeight};\n  background-color: ${colors.dark};\n`\n\nconst StyledDivider = styled.svg`\n  width: 100%;\n\n  polygon {\n    fill: ${colors.dark};\n  }\n`\n\ninterface FooterProps {\n  className?: string\n}\n\nconst Footer: React.FC<FooterProps> = ({ className }) => (\n  <>\n    <StyledDivider viewBox=\"0 0 100 2\">\n      <polygon points=\"0 0, 80 2, 100 0, 100 2, 0 100\"></polygon>\n    </StyledDivider>\n    <StyledFooter className={className}>{new Date().toISOString()}</StyledFooter>\n  </>\n)\n\nexport default Footer\n","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'modern-normalize'\n\nimport Header from '../components/Header'\nimport LayoutRoot from '../components/LayoutRoot'\nimport Main from '../components/Main'\nimport Footer from '../components/Footer'\n\ninterface StaticQueryProps {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n      keywords: string\n    }\n  }\n}\n\nconst IndexLayout: React.FC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n            keywords\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <LayoutRoot>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'keywords', content: data.site.siteMetadata.keywords }\n          ]}\n        />\n        <Header title={data.site.siteMetadata.title} />\n        <Main>{children}</Main>\n        <Footer />\n      </LayoutRoot>\n    )}\n  />\n)\n\nexport default IndexLayout\n"],"sourceRoot":""}