{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/styles/variables.ts","webpack:///./src/components/Header.tsx","webpack:///./src/styles/global.ts","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/Main.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/layouts/index.tsx","webpack:///./src/components/Page.tsx","webpack:///./src/components/Container.tsx"],"names":["NotFoundPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts__WEBPACK_IMPORTED_MODULE_5__","_components_Page__WEBPACK_IMPORTED_MODULE_3__","_components_Container__WEBPACK_IMPORTED_MODULE_4__","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","dimensions","regular","large","gutter","pageWidth","headerHeight","footerHeight","colors","StyledHeader","styled_base_browser_esm","target","HomepageLink","Link","name","styles","StyledDivider","Header","_ref","title","core_browser_esm","react","viewBox","points","globalStyles","css_browser_esm","LayoutRoot","children","StyledMain","Main","className","StyledFooter","Footer","Footer_StyledDivider","Date","toISOString","IndexLayout","gatsby_browser_entry","query","render","data","components_LayoutRoot","Helmet_default","a","site","siteMetadata","meta","content","description","keywords","components_Header","components_Main","components_Footer","_3113665618","StyledPage","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","Page","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","StyledContainer","Container"],"mappings":"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","file":"component---src-pages-404-tsx-da8ae3a9ebae38b43025.js","sourcesContent":["import * as React from 'react'\nimport { Link } from 'gatsby'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport IndexLayout from '../layouts'\n\nconst NotFoundPage = () => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>404: Page not found.</h1>\n        <p>\n          You've hit the void. <Link to=\"/\">Go back.</Link>\n        </p>\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default NotFoundPage\n","/* eslint-disable max-len */\n\nexport const dimensions = {\n  baseSize: {\n    regular: '16px',\n    large: '18px'\n  },\n  layout: {\n    gutter: '1.5rem',\n    pageWidth: '80rem',\n    headerHeight: '8rem',\n    footerHeight: '5rem'\n  }\n}\n\nexport const colors = {\n  dark: '#6A4A3C',\n  red: '#CC333F',\n  orange: '#EB6841',\n  yellow: '#EDC951',\n  contra: '#00A0B0',\n}\n\nexport const fonts = {\n  sansSerif: \"'Roboto', 'Verdana', 'Ubuntu', sans-serif\"\n}\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\nimport { dimensions, colors } from '../styles/variables'\n\nconst StyledHeader = styled.header`\n  position: relative;\n  height: ${dimensions.layout.headerHeight};\n  background-color: ${colors.dark};\n`\n\nconst HomepageLink = styled(Link)`\n  color: white;\n  font-size: 1.5rem;\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n  }\n`\n\nconst StyledDivider = styled.svg`\n  width: 100%;\n\n  polygon {\n    fill: ${colors.dark};\n  }\n`\n\ninterface HeaderProps {\n  title: string\n}\n\nconst Header: React.FC<HeaderProps> = ({ title }) => (\n  <>\n    <StyledHeader>\n      <HomepageLink to=\"/\">{title}</HomepageLink>\n    </StyledHeader>\n    <StyledDivider viewBox=\"0 0 100 2\">\n      <polygon points=\"0 0, 100 0, 100 2, 20 0, 0 2\"></polygon>\n    </StyledDivider>\n  </>\n)\n\nexport default Header\n","import css from '@emotion/css';\nimport { dimensions, fonts } from './variables'\n\nexport const globalStyles = css`\n  html {\n    height: 100%;\n    font-size: ${dimensions.baseSize.regular};\n    font-family: ${fonts.sansSerif};\n  }\n\n  body {\n    display: flex;\n    min-height: 100%;\n    flex-direction: column;\n  }\n\n  #___gatsby,\n  #___gatsby > * {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n  }\n\n  header,\n  main,\n  footer {\n    padding: ${dimensions.layout.gutter} calc((100vw - ${dimensions.layout.pageWidth}) / 2);\n  }\n`\n","import * as React from 'react'\nimport { Global } from '@emotion/core'\nimport { globalStyles } from '../styles/global'\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.FC<LayoutRootProps> = ({ children }) => (\n  <>\n    <Global styles={globalStyles} />\n    {children}\n  </>\n)\n\nexport default LayoutRoot\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n`\n\ninterface MainProps {\n  className?: string\n}\n\nconst Main: React.FC<MainProps> = ({ children, className }) => <StyledMain className={className}>{children}</StyledMain>\n\nexport default Main\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions, colors } from '../styles/variables'\n\nconst StyledFooter = styled.footer`\n  position: relative;\n  height: ${dimensions.layout.footerHeight};\n  background-color: ${colors.dark};\n`\n\nconst StyledDivider = styled.svg`\n  width: 100%;\n\n  polygon {\n    fill: ${colors.dark};\n  }\n`\n\ninterface FooterProps {\n  className?: string\n}\n\nconst Footer: React.FC<FooterProps> = ({ className }) => (\n  <>\n    <StyledDivider viewBox=\"0 0 100 2\">\n      <polygon points=\"0 0, 80 2, 100 0, 100 2, 0 100\"></polygon>\n    </StyledDivider>\n    <StyledFooter className={className}>{new Date().toISOString()}</StyledFooter>\n  </>\n)\n\nexport default Footer\n","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'modern-normalize'\n\nimport Header from '../components/Header'\nimport LayoutRoot from '../components/LayoutRoot'\nimport Main from '../components/Main'\nimport Footer from '../components/Footer'\n\ninterface StaticQueryProps {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n      keywords: string\n    }\n  }\n}\n\nconst IndexLayout: React.FC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n            keywords\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <LayoutRoot>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'keywords', content: data.site.siteMetadata.keywords }\n          ]}\n        />\n        <Header title={data.site.siteMetadata.title} />\n        <Main>{children}</Main>\n        <Footer />\n      </LayoutRoot>\n    )}\n  />\n)\n\nexport default IndexLayout\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  margin-bottom: 3rem;\n`\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\n\nexport default Page\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n`\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.FC<ContainerProps> = ({ children, className }) => <StyledContainer className={className}>{children}</StyledContainer>\n\nexport default Container\n"],"sourceRoot":""}