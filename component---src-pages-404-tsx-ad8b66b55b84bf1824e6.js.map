{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/components/Content.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.tsx","webpack:///./src/components/Main.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/LocalizedLink.tsx","webpack:///./src/components/parts/Brand.tsx","webpack:///./src/components/Head.tsx","webpack:///./src/components/sections/Navigation.tsx","webpack:///./src/components/parts/TopNavigation.tsx","webpack:///./src/layouts/index.tsx"],"names":["NotFoundPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts__WEBPACK_IMPORTED_MODULE_3__","_components_Content__WEBPACK_IMPORTED_MODULE_4__","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","StyledContent","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","dimensions","layout","gutter","pageWidth","StyledInnerContent","Content","_ref","children","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","data","query","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","StyledHeader","styled_base_browser_esm","headerHeight","colors","dark","Header","core_browser_esm","react","StyledMain","Main","StyledFooter","footerHeight","orange","StyledDivider","Footer","viewBox","points","LocalizedLink","currentLocale","useContext","LocaleContext","path","langKey","gatsby_browser_entry","_extends","ref","HomepageLink","white","Brand","injectIntl","intl","language","title","author","Helmet_default","formatMessage","id","meta","name","content","lang","StyledNav","styles","StyledList","Navigation","MenuItem","TopNavigation","sections_Navigation","components_LocalizedLink","index_es","IndexLayout","react_default","components_Head","site","siteMetadata","layouts_StyledHeader","parts_Brand","parts_TopNavigation","components_Main","components_Footer","license","value","Date","buildTime","_3450679258"],"mappings":"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","file":"component---src-pages-404-tsx-ad8b66b55b84bf1824e6.js","sourcesContent":["import * as React from 'react'\nimport { Link } from 'gatsby'\n\nimport IndexLayout from '../layouts'\nimport Content from '../components/Content'\n\nconst NotFoundPage = () => (\n  <IndexLayout>\n    <Content>\n      <h1>404: Page not found.</h1>\n      <p>\n        You've hit the void. <Link to=\"/\">Go back.</Link>\n      </p>\n    </Content>\n  </IndexLayout>\n)\n\nexport default NotFoundPage\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions } from '../styles/variables'\n\nconst StyledContent = styled.div`\n  padding: ${dimensions.layout.gutter} calc((100vw - ${dimensions.layout.pageWidth}) / 2);\n  width: 100%;\n`\n\nconst StyledInnerContent = styled.div`\n  padding: 0 ${dimensions.layout.gutter};\n`\n\ninterface ContentProps {\n  className?: string\n}\n\nconst Content: React.FC<ContentProps> = ({ children, className }) => (\n  <>\n    <StyledContent>\n      <StyledInnerContent className={className}>{children}</StyledInnerContent>\n    </StyledContent>\n  </>\n)\n\nexport default Content\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions, colors } from '../styles/variables'\nimport Content from './Content'\n\nconst StyledHeader = styled.header`\n  display: flex;\n  align-items: center;\n  height: ${dimensions.layout.headerHeight};\n  background-color: ${colors.dark};\n`\n\ninterface HeaderProps {\n  className?: string\n}\n\nconst Header: React.FC<HeaderProps> = ({ className, children }) => (\n  <>\n    <StyledHeader>\n      <Content className={className}>{children}</Content>\n    </StyledHeader>\n  </>\n)\n\nexport default Header\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { colors, dimensions } from '../styles/variables'\n\nconst StyledMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  background-color: ${colors.dark};\n  padding-bottom: ${dimensions.layout.gutter};\n`\n\ninterface MainProps {\n  className?: string\n}\n\nconst Main: React.FC<MainProps> = ({ children, className }) => (\n  <>\n    <StyledMain className={className}>{children}</StyledMain>\n  </>\n)\n\nexport default Main\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions, colors } from '../styles/variables'\nimport Content from './Content'\n\nconst StyledFooter = styled.footer`\n  position: relative;\n  height: ${dimensions.layout.footerHeight};\n  background-color: ${colors.orange};\n  display: flex;\n  align-items: center;\n  font-size: 0.8rem;\n`\n\nconst StyledDivider = styled.svg`\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  bottom: 100%;\n  left: 0;\n\n  polygon {\n    fill: ${colors.orange};\n  }\n`\n\ninterface FooterProps {\n  className?: string\n}\n\nconst Footer: React.FC<FooterProps> = ({ className, children }) => (\n  <>\n    <StyledFooter className={className}>\n      <StyledDivider viewBox=\"0 -0.01 100 2\" className=\"topDivider\">\n        <polygon points=\"0 2, 80 0, 100 2\"></polygon>\n      </StyledDivider>\n      <Content>{children}</Content>\n    </StyledFooter>\n  </>\n)\n\nexport default Footer\n","import { Link, GatsbyLinkProps } from 'gatsby'\nimport { LocaleContext } from './PageWrapper'\nimport React from 'react'\n\nconst LocalizedLink: React.FC<GatsbyLinkProps<any>> = props => {\n  const currentLocale = React.useContext(LocaleContext)\n  let path = props.to\n  if (currentLocale.langKey === 'de') {\n    path = `/${currentLocale.langKey}${path}`\n  }\n  return <Link {...props} ref={null} to={path} />\n}\n\nexport default LocalizedLink\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { colors } from '../../styles/variables'\nimport LocalizedLink from '../LocalizedLink'\n\nconst HomepageLink = styled(LocalizedLink)`\n  display: block;\n  color: ${colors.white};\n  font-size: 1.5rem;\n  font-weight: 600;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    span {\n      opacity: 1;\n      margin-left: 0;\n    }\n  }\n\n  span {\n    opacity: 0;\n    margin-left: -1rem;\n    transition: 0.5s;\n  }\n`\n\ninterface BrandProps {}\n\nconst Brand: React.FC<BrandProps> = () => (\n  <>\n    <h1>\n      <HomepageLink to=\"/\">\n        r.obin<span>.ch</span>\n      </HomepageLink>\n    </h1>\n  </>\n)\n\nexport default Brand\n","import * as React from 'react'\nimport { InjectedIntlProps, injectIntl } from 'react-intl'\nimport Helmet from 'react-helmet'\n\ninterface HeadProps extends InjectedIntlProps {\n  language: string\n  title: string\n  author: string\n}\n\nconst Head: React.FC<HeadProps> = ({ intl, language, title, author }) => (\n  <>\n    <Helmet\n      title={`${intl.formatMessage({ id: 'subtitle' })} - ${title}`}\n      meta={[\n        { name: 'description', content: intl.formatMessage({ id: 'description' }) },\n        { name: 'keywords', content: intl.formatMessage({ id: 'keywords' }) },\n        { name: 'author', content: author }\n      ]}\n    >\n      <html lang={language} />\n    </Helmet>\n  </>\n)\n\nexport default injectIntl(Head)\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\ninterface Navigation {\n  className?: string\n}\n\nconst StyledNav = styled.nav`\n  display: flex;\n  align-items: center;\n`\n\nconst StyledList = styled.ul`\n  display: flex;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`\n\nconst Navigation: React.FC<Navigation> = ({ className, children }) => (\n  <StyledNav>\n    <StyledList className={className}>{children}</StyledList>\n  </StyledNav>\n)\n\nexport default Navigation\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions, colors } from '../../styles/variables'\nimport Navigation from '../sections/Navigation'\nimport { FormattedMessage } from 'react-intl'\nimport LocalizedLink from '../LocalizedLink'\n\ninterface TopNavigationProps {\n  className?: string\n}\n\nconst MenuItem = styled.li`\n  margin-left: calc(${dimensions.layout.gutter} / 2);\n\n  a {\n    display: block;\n    text-decoration: none;\n    padding: calc(${dimensions.layout.gutter} / 2);\n    background-color: rgba(255, 255, 255, 0.1);\n    outline: 2px solid transparent;\n\n    &:hover {\n      outline: 2px solid ${colors.white};\n    }\n  }\n`\n\nconst TopNavigation: React.FC<TopNavigationProps> = ({ className }) => (\n  <Navigation className={className}>\n    <MenuItem>\n      <LocalizedLink to=\"/about\">\n        <FormattedMessage id=\"navigation.about\" />\n      </LocalizedLink>\n    </MenuItem>\n    <MenuItem>\n      <LocalizedLink to=\"/projects\">\n        <FormattedMessage id=\"navigation.projects\" />\n      </LocalizedLink>\n    </MenuItem>\n    <MenuItem>\n      <LocalizedLink to=\"/recordings\">\n        <FormattedMessage id=\"navigation.recordings\" />\n      </LocalizedLink>\n    </MenuItem>\n    <MenuItem>\n      <LocalizedLink to=\"/blog\">\n        <FormattedMessage id=\"navigation.blog\" />\n      </LocalizedLink>\n    </MenuItem>\n    <MenuItem>\n      <LocalizedLink to=\"/collection\">\n        <FormattedMessage id=\"navigation.collection\" />\n      </LocalizedLink>\n    </MenuItem>\n  </Navigation>\n)\n\nexport default TopNavigation\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'modern-normalize'\n\nimport Header from '../components/Header'\nimport Main from '../components/Main'\nimport Footer from '../components/Footer'\nimport { FormattedDate, FormattedTime } from 'react-intl'\nimport Brand from '../components/parts/Brand'\nimport Head from '../components/Head'\nimport TopNavigation from '../components/parts/TopNavigation'\nimport styled from '@emotion/styled'\nimport { LocaleContext } from '../components/PageWrapper'\n\ninterface StaticQueryProps {\n  site: {\n    siteMetadata: {\n      title: string\n      license: string\n      author: {\n        name: string\n      }\n    }\n    buildTime: string\n  }\n}\n\nconst StyledHeader = styled(Header)`\n  display: flex;\n  justify-content: space-between;\n`\n\nconst IndexLayout: React.FC = ({ children }) => {\n  const currentLocale = React.useContext(LocaleContext)\n  return (\n    <StaticQuery\n      query={graphql`\n        query IndexLayoutQuery {\n          site {\n            siteMetadata {\n              title\n              license\n              author {\n                name\n              }\n            }\n            buildTime\n          }\n        }\n      `}\n      render={(data: StaticQueryProps) => (\n        <>\n          <Head language={currentLocale.langKey} title={data.site.siteMetadata.title} author={data.site.siteMetadata.author.name} />\n          <StyledHeader>\n            <Brand />\n            <TopNavigation />\n          </StyledHeader>\n          <Main>{children}</Main>\n          <Footer>\n            {data.site.siteMetadata.license} - <FormattedDate value={new Date(data.site.buildTime)} />{' '}\n            <FormattedTime value={new Date(data.site.buildTime)} />\n          </Footer>\n        </>\n      )}\n    />\n  )\n}\n\nexport default IndexLayout\n"],"sourceRoot":""}