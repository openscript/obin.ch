{"version":3,"sources":["webpack:///./src/components/Page.tsx","webpack:///./src/components/Container.tsx","webpack:///./src/templates/page.tsx","webpack:///./src/components/Content.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.tsx","webpack:///./src/components/Main.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/LocalizedLink.tsx","webpack:///./src/components/parts/Brand.tsx","webpack:///./src/components/Head.tsx","webpack:///./src/components/sections/Navigation.tsx","webpack:///./src/components/parts/TopNavigation.tsx","webpack:///./src/layouts/index.tsx"],"names":["StyledPage","Object","styled_base_browser_esm","target","name","styles","Page","_ref","children","className","core_browser_esm","StyledContainer","Container","PageTemplate","data","layouts","components_Page","components_Container","markdownRemark","frontmatter","title","dangerouslySetInnerHTML","__html","html","query","StyledContent","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","dimensions","layout","gutter","pageWidth","StyledInnerContent","Content","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","StyledHeader","headerHeight","colors","dark","Header","react","StyledMain","Main","StyledFooter","footerHeight","orange","StyledDivider","Footer","viewBox","points","LocalizedLink","currentLocale","useContext","LocaleContext","path","to","langKey","gatsby_browser_entry","_extends","ref","HomepageLink","white","Brand","injectIntl","intl","language","author","Helmet_default","formatMessage","id","meta","content","lang","StyledNav","StyledList","Navigation","MenuItem","TopNavigation","sections_Navigation","components_LocalizedLink","lib","IndexLayout","react_default","components_Head","site","siteMetadata","layouts_StyledHeader","parts_Brand","parts_TopNavigation","components_Main","components_Footer","license","value","Date","buildTime","_3450679258"],"mappings":"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","file":"component---src-templates-page-tsx-ad42990580c2689c26d4.js","sourcesContent":["import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  margin-bottom: 3rem;\n`\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\n\nexport default Page\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n`\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.FC<ContainerProps> = ({ children, className }) => <StyledContainer className={className}>{children}</StyledContainer>\n\nexport default Container\n","import * as React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport IndexLayout from '../layouts'\n\ninterface PageTemplateProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        author: {\n          name: string\n          url: string\n        }\n      }\n    }\n    markdownRemark: {\n      html: string\n      excerpt: string\n      frontmatter: {\n        title: string\n      }\n    }\n  }\n}\n\nconst PageTemplate: React.FC<PageTemplateProps> = ({ data }) => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>{data.markdownRemark.frontmatter.title}</h1>\n        {/* eslint-disable-next-line react/no-danger */}\n        <div dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }} />\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default PageTemplate\n\nexport const query = graphql`\n  query PageTemplateQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author {\n          name\n          url\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions } from '../styles/variables'\n\nconst StyledContent = styled.div`\n  padding: ${dimensions.layout.gutter} calc((100vw - ${dimensions.layout.pageWidth}) / 2);\n  width: 100%;\n`\n\nconst StyledInnerContent = styled.div`\n  padding: 0 ${dimensions.layout.gutter};\n`\n\ninterface ContentProps {\n  className?: string\n}\n\nconst Content: React.FC<ContentProps> = ({ children, className }) => (\n  <>\n    <StyledContent>\n      <StyledInnerContent className={className}>{children}</StyledInnerContent>\n    </StyledContent>\n  </>\n)\n\nexport default Content\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions, colors } from '../styles/variables'\nimport Content from './Content'\n\nconst StyledHeader = styled.header`\n  display: flex;\n  align-items: center;\n  height: ${dimensions.layout.headerHeight};\n  background-color: ${colors.dark};\n`\n\ninterface HeaderProps {\n  className?: string\n}\n\nconst Header: React.FC<HeaderProps> = ({ className, children }) => (\n  <>\n    <StyledHeader>\n      <Content className={className}>{children}</Content>\n    </StyledHeader>\n  </>\n)\n\nexport default Header\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { colors, dimensions } from '../styles/variables'\n\nconst StyledMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  background-color: ${colors.dark};\n  padding-bottom: ${dimensions.layout.gutter};\n`\n\ninterface MainProps {\n  className?: string\n}\n\nconst Main: React.FC<MainProps> = ({ children, className }) => (\n  <>\n    <StyledMain className={className}>{children}</StyledMain>\n  </>\n)\n\nexport default Main\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions, colors } from '../styles/variables'\nimport Content from './Content'\n\nconst StyledFooter = styled.footer`\n  position: relative;\n  height: ${dimensions.layout.footerHeight};\n  background-color: ${colors.orange};\n  display: flex;\n  align-items: center;\n  font-size: 0.8rem;\n`\n\nconst StyledDivider = styled.svg`\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  bottom: 100%;\n  left: 0;\n\n  polygon {\n    fill: ${colors.orange};\n  }\n`\n\ninterface FooterProps {\n  className?: string\n}\n\nconst Footer: React.FC<FooterProps> = ({ className, children }) => (\n  <>\n    <StyledFooter className={className}>\n      <StyledDivider viewBox=\"0 -0.01 100 2\" className=\"topDivider\">\n        <polygon points=\"0 2, 80 0, 100 2\"></polygon>\n      </StyledDivider>\n      <Content>{children}</Content>\n    </StyledFooter>\n  </>\n)\n\nexport default Footer\n","import { Link, GatsbyLinkProps } from 'gatsby'\nimport { LocaleContext } from './PageWrapper'\nimport React from 'react'\n\nconst LocalizedLink: React.FC<GatsbyLinkProps<any>> = props => {\n  const currentLocale = React.useContext(LocaleContext)\n  let path = props.to\n  if (currentLocale.langKey === 'de') {\n    path = `/${currentLocale.langKey}${path}`\n  }\n  return <Link {...props} ref={null} to={path} />\n}\n\nexport default LocalizedLink\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { colors } from '../../styles/variables'\nimport LocalizedLink from '../LocalizedLink'\n\nconst HomepageLink = styled(LocalizedLink)`\n  display: block;\n  color: ${colors.white};\n  font-size: 1.5rem;\n  font-weight: 600;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    span {\n      opacity: 1;\n      margin-left: 0;\n    }\n  }\n\n  span {\n    opacity: 0;\n    margin-left: -1rem;\n    transition: 0.5s;\n  }\n`\n\ninterface BrandProps {}\n\nconst Brand: React.FC<BrandProps> = () => (\n  <>\n    <h1>\n      <HomepageLink to=\"/\">\n        r.obin<span>.ch</span>\n      </HomepageLink>\n    </h1>\n  </>\n)\n\nexport default Brand\n","import * as React from 'react'\nimport { InjectedIntlProps, injectIntl } from 'react-intl'\nimport Helmet from 'react-helmet'\n\ninterface HeadProps extends InjectedIntlProps {\n  language: string\n  title: string\n  author: string\n}\n\nconst Head: React.FC<HeadProps> = ({ intl, language, title, author }) => (\n  <>\n    <Helmet\n      title={`${intl.formatMessage({ id: 'subtitle' })} - ${title}`}\n      meta={[\n        { name: 'description', content: intl.formatMessage({ id: 'description' }) },\n        { name: 'keywords', content: intl.formatMessage({ id: 'keywords' }) },\n        { name: 'author', content: author }\n      ]}\n    >\n      <html lang={language} />\n    </Helmet>\n  </>\n)\n\nexport default injectIntl(Head)\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\ninterface Navigation {\n  className?: string\n}\n\nconst StyledNav = styled.nav`\n  display: flex;\n  align-items: center;\n`\n\nconst StyledList = styled.ul`\n  display: flex;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`\n\nconst Navigation: React.FC<Navigation> = ({ className, children }) => (\n  <StyledNav>\n    <StyledList className={className}>{children}</StyledList>\n  </StyledNav>\n)\n\nexport default Navigation\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions, colors } from '../../styles/variables'\nimport Navigation from '../sections/Navigation'\nimport { FormattedMessage } from 'react-intl'\nimport LocalizedLink from '../LocalizedLink'\n\ninterface TopNavigationProps {\n  className?: string\n}\n\nconst MenuItem = styled.li`\n  margin-left: calc(${dimensions.layout.gutter} / 2);\n\n  a {\n    display: block;\n    text-decoration: none;\n    padding: calc(${dimensions.layout.gutter} / 2);\n    background-color: rgba(255, 255, 255, 0.1);\n    outline: 2px solid transparent;\n\n    &:hover {\n      outline: 2px solid ${colors.white};\n    }\n  }\n`\n\nconst TopNavigation: React.FC<TopNavigationProps> = ({ className }) => (\n  <Navigation className={className}>\n    <MenuItem>\n      <LocalizedLink to=\"/about\">\n        <FormattedMessage id=\"navigation.about\" />\n      </LocalizedLink>\n    </MenuItem>\n    <MenuItem>\n      <LocalizedLink to=\"/projects\">\n        <FormattedMessage id=\"navigation.projects\" />\n      </LocalizedLink>\n    </MenuItem>\n    <MenuItem>\n      <LocalizedLink to=\"/recordings\">\n        <FormattedMessage id=\"navigation.recordings\" />\n      </LocalizedLink>\n    </MenuItem>\n    <MenuItem>\n      <LocalizedLink to=\"/blog\">\n        <FormattedMessage id=\"navigation.blog\" />\n      </LocalizedLink>\n    </MenuItem>\n    <MenuItem>\n      <LocalizedLink to=\"/collection\">\n        <FormattedMessage id=\"navigation.collection\" />\n      </LocalizedLink>\n    </MenuItem>\n  </Navigation>\n)\n\nexport default TopNavigation\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'modern-normalize'\n\nimport Header from '../components/Header'\nimport Main from '../components/Main'\nimport Footer from '../components/Footer'\nimport { FormattedDate, FormattedTime } from 'react-intl'\nimport Brand from '../components/parts/Brand'\nimport Head from '../components/Head'\nimport TopNavigation from '../components/parts/TopNavigation'\nimport styled from '@emotion/styled'\nimport { LocaleContext } from '../components/PageWrapper'\n\ninterface StaticQueryProps {\n  site: {\n    siteMetadata: {\n      title: string\n      license: string\n      author: {\n        name: string\n      }\n    }\n    buildTime: string\n  }\n}\n\nconst StyledHeader = styled(Header)`\n  display: flex;\n  justify-content: space-between;\n`\n\nconst IndexLayout: React.FC = ({ children }) => {\n  const currentLocale = React.useContext(LocaleContext)\n  return (\n    <StaticQuery\n      query={graphql`\n        query IndexLayoutQuery {\n          site {\n            siteMetadata {\n              title\n              license\n              author {\n                name\n              }\n            }\n            buildTime\n          }\n        }\n      `}\n      render={(data: StaticQueryProps) => (\n        <>\n          <Head language={currentLocale.langKey} title={data.site.siteMetadata.title} author={data.site.siteMetadata.author.name} />\n          <StyledHeader>\n            <Brand />\n            <TopNavigation />\n          </StyledHeader>\n          <Main>{children}</Main>\n          <Footer>\n            {data.site.siteMetadata.license} - <FormattedDate value={new Date(data.site.buildTime)} />{' '}\n            <FormattedTime value={new Date(data.site.buildTime)} />\n          </Footer>\n        </>\n      )}\n    />\n  )\n}\n\nexport default IndexLayout\n"],"sourceRoot":""}