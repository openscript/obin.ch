{"version":3,"sources":["webpack:///./src/templates/page.tsx","webpack:///./src/styles/variables.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/translations/locales.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.tsx","webpack:///./src/styles/global.ts","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/Main.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/layouts/index.tsx","webpack:///./src/components/Page.tsx","webpack:///./src/components/Container.tsx"],"names":["PageTemplate","_ref","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts__WEBPACK_IMPORTED_MODULE_4__","_components_Page__WEBPACK_IMPORTED_MODULE_2__","_components_Container__WEBPACK_IMPORTED_MODULE_3__","markdownRemark","frontmatter","title","dangerouslySetInnerHTML","__html","html","query","__webpack_require__","d","__webpack_exports__","dimensions","colors","fonts","baseSize","regular","large","layout","gutter","pageWidth","headerHeight","footerHeight","white","dark","red","orange","yellow","contra","sansSerif","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","GermanTranslation","EnglishTranslation","language","key","name","messages","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","StyledHeader","styled_base_browser_esm","target","HomepageLink","Link","styles","Header","core_browser_esm","react","to","globalStyles","css_browser_esm","LayoutRoot","StyledMain","Main","className","StyledFooter","StyledDivider","Footer","viewBox","points","IndexLayout","_ref$translation","translation","gatsby_browser_entry","index_es","locale","components_LayoutRoot","Helmet_default","site","siteMetadata","meta","content","description","keywords","lang","components_Header","components_Main","components_Footer","license","Date","buildTime","toISOString","_278654265","StyledPage","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","Page","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","StyledContainer","Container"],"mappings":"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","file":"component---src-templates-page-tsx-bdbee4960b6b23899044.js","sourcesContent":["import * as React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport IndexLayout from '../layouts'\n\ninterface PageTemplateProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        author: {\n          name: string\n          url: string\n        }\n      }\n    }\n    markdownRemark: {\n      html: string\n      excerpt: string\n      frontmatter: {\n        title: string\n      }\n    }\n  }\n}\n\nconst PageTemplate: React.FC<PageTemplateProps> = ({ data }) => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>{data.markdownRemark.frontmatter.title}</h1>\n        {/* eslint-disable-next-line react/no-danger */}\n        <div dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }} />\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default PageTemplate\n\nexport const query = graphql`\n  query PageTemplateQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n        author {\n          name\n          url\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","/* eslint-disable max-len */\n\nexport const dimensions = {\n  baseSize: {\n    regular: '16px',\n    large: '18px'\n  },\n  layout: {\n    gutter: '1.5rem',\n    pageWidth: '80rem',\n    headerHeight: '8rem',\n    footerHeight: '5rem'\n  }\n}\n\nexport const colors = {\n  white: '#EEEEEE',\n  dark: '#6A4A3C',\n  red: '#CC333F',\n  orange: '#EB6841',\n  yellow: '#EDC951',\n  contra: '#00A0B0',\n}\n\nexport const fonts = {\n  sansSerif: \"'Roboto', 'Verdana', 'Ubuntu', sans-serif\"\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","export const Locales = {\n  de: { key: 'de', name: 'Deutsch' },\n  en: { key: 'en', name: 'English' }\n}\n\nexport interface Translation {\n  language: string\n  messages: { [key: string]: string }\n}\n\nexport const GermanTranslation: Translation = {\n  language: Locales.de.key,\n  messages: {\n    name: 'Deutsch'\n  }\n}\n\nexport const EnglishTranslation: Translation = {\n  language: Locales.en.key,\n  messages: {\n    name: 'Englisch'\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\nimport { dimensions, colors } from '../styles/variables'\n\nconst StyledHeader = styled.header`\n  position: relative;\n  height: ${dimensions.layout.headerHeight};\n  background-color: ${colors.dark};\n`\n\nconst HomepageLink = styled(Link)`\n  color: white;\n  font-size: 1.5rem;\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n  }\n`\n\ninterface HeaderProps {\n  title: string\n}\n\nconst Header: React.FC<HeaderProps> = ({ title }) => (\n  <>\n    <StyledHeader>\n      <HomepageLink to=\"/\">{title}</HomepageLink>\n    </StyledHeader>\n  </>\n)\n\nexport default Header\n","import css from '@emotion/css';\nimport { dimensions, fonts } from './variables'\n\nexport const globalStyles = css`\n  html {\n    height: 100%;\n    font-size: ${dimensions.baseSize.regular};\n    font-family: ${fonts.sansSerif};\n  }\n\n  body {\n    display: flex;\n    min-height: 100%;\n    flex-direction: column;\n  }\n\n  #___gatsby,\n  #___gatsby > * {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n  }\n\n  header,\n  footer {\n    padding: ${dimensions.layout.gutter} calc((100vw - ${dimensions.layout.pageWidth}) / 2);\n  }\n`\n","import * as React from 'react'\nimport { Global } from '@emotion/core'\nimport { globalStyles } from '../styles/global'\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.FC<LayoutRootProps> = ({ children }) => (\n  <>\n    <Global styles={globalStyles} />\n    {children}\n  </>\n)\n\nexport default LayoutRoot\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { colors } from '../styles/variables'\n\nconst StyledMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  background-color: ${colors.dark};\n`\n\ninterface MainProps {\n  className?: string\n}\n\nconst Main: React.FC<MainProps> = ({ children, className }) => (\n  <>\n    <StyledMain className={className}>{children}</StyledMain>\n  </>\n)\n\nexport default Main\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions, colors } from '../styles/variables'\n\nconst StyledFooter = styled.footer`\n  height: ${dimensions.layout.footerHeight};\n  background-color: ${colors.orange};\n  display: flex;\n  align-items: center;\n`\n\nconst StyledDivider = styled.svg`\n  width: 100%;\n  background-color: ${colors.orange};\n\n  polygon {\n    fill: ${colors.dark};\n  }\n`\n\ninterface FooterProps {\n  className?: string\n}\n\nconst Footer: React.FC<FooterProps> = ({ className, children }) => (\n  <>\n    <StyledDivider viewBox=\"0 0 100 2\" className=\"topDivider\">\n      <polygon points=\"0 0, 100 0, 100 2, 80 0, 0 2\"></polygon>\n    </StyledDivider>\n    <StyledFooter className={className}>{children}</StyledFooter>\n  </>\n)\n\nexport default Footer\n","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'modern-normalize'\n\nimport Header from '../components/Header'\nimport LayoutRoot from '../components/LayoutRoot'\nimport Main from '../components/Main'\nimport Footer from '../components/Footer'\nimport { IntlProvider } from 'react-intl'\nimport { Translation, EnglishTranslation } from '../translations/locales'\n\ninterface StaticQueryProps {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n      keywords: string\n      license: string\n    }\n    buildTime: string\n  }\n}\n\ninterface Props {\n  translation?: Translation\n}\n\nconst IndexLayout: React.FC<Props> = ({ children, translation = EnglishTranslation }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n            keywords\n            license\n          }\n          buildTime\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <IntlProvider locale={translation.language} messages={translation.messages}>\n        <LayoutRoot>\n          <Helmet\n            title={data.site.siteMetadata.title}\n            meta={[\n              { name: 'description', content: data.site.siteMetadata.description },\n              { name: 'keywords', content: data.site.siteMetadata.keywords }\n            ]}\n          >\n            <html lang={translation.language} />\n          </Helmet>\n          <Header title={data.site.siteMetadata.title} />\n          <Main>{children}</Main>\n          <Footer>\n            {data.site.siteMetadata.license} - {new Date(data.site.buildTime).toISOString()}\n          </Footer>\n        </LayoutRoot>\n      </IntlProvider>\n    )}\n  />\n)\n\nexport default IndexLayout\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  margin-bottom: 3rem;\n`\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\n\nexport default Page\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n`\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.FC<ContainerProps> = ({ children, className }) => <StyledContainer className={className}>{children}</StyledContainer>\n\nexport default Container\n"],"sourceRoot":""}