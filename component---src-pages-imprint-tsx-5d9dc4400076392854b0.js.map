{"version":3,"sources":["webpack:///./src/pages/imprint.tsx"],"names":["ImprintPage","data","pageContext","title","useIntl","formatMessage","id","dangerouslySetInnerHTML","__html","imprint","html"],"mappings":"2FACA,6GASe,SAASA,EAAT,GAA8D,IAAvCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,YAEpCC,EADOC,cACMC,cAAc,CAAEC,GAAI,uBACvC,OACE,YAAC,IAAD,CAAeJ,YAAaA,EAAaC,MAAOA,GAC9C,YAAC,IAAD,CAAeI,wBAAyB,CAAEC,OAAQP,EAAKQ,QAAQC","file":"component---src-pages-imprint-tsx-5d9dc4400076392854b0.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport { SitePageContext } from '../../graphql-types';\nimport { DefaultLayout } from '../layouts/default';\nimport { ImprintPageQuery } from '../../graphql-types';\nimport { PaddedElement } from '../layouts/default/PaddedElement';\n\ntype ImprintPageProps = { data: ImprintPageQuery; pageContext: SitePageContext };\n\nexport default function ImprintPage({ data, pageContext }: ImprintPageProps) {\n  const intl = useIntl();\n  const title = intl.formatMessage({ id: 'page.imprint.title' });\n  return (\n    <DefaultLayout pageContext={pageContext} title={title}>\n      <PaddedElement dangerouslySetInnerHTML={{ __html: data.imprint.html }}></PaddedElement>\n    </DefaultLayout>\n  );\n}\n\nexport const query = graphql`\n  query ImprintPage($language: String) {\n    imprint: markdownRemark(fields: { language: { eq: $language }, kind: { eq: \"blocks\" }, filename: { glob: \"*imprint*\" } }) {\n      html\n    }\n  }\n`;\n"],"sourceRoot":""}