{"version":3,"sources":["webpack:///./src/templates/blogPost.tsx"],"names":["Post","MetaInformation","BlogPost","data","pageContext","title","useIntl","formatMessage","id","post","blogPost","frontmatter","dangerouslySetInnerHTML","__html","html","value","fields","modifiedAt","tags","map","tag","i","to","path","key"],"mappings":"0PAQA,IAAMA,EAAO,uBAAH,iCAAG,CAAH,gHAUJC,EAAkB,kBAAH,4CAAG,CAAH,sFAWN,SAASC,EAAT,GAAwD,IAApCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,YAEjCC,EADOC,cACMC,cAAc,CAAEC,GAAI,uBAAyB,CAAEC,KAAMN,EAAKO,SAASC,YAAYN,QAClG,OACE,YAAC,IAAD,CAAeD,YAAaA,EAAaC,MAAOA,GAC9C,YAAC,IAAD,KACE,YAACL,EAAD,KACE,sBAAKG,EAAKO,SAASC,YAAYN,OAC/B,mBAAKO,wBAAyB,CAAEC,OAAQV,EAAKO,SAASI,QACtD,YAACb,EAAD,KACE,sBACE,YAAC,IAAD,CAAkBO,GAAG,eAEvB,sBACE,YAAC,IAAD,CAAeO,MAAOZ,EAAKO,SAASM,OAAOC,aAD7C,IAC4D,YAAC,IAAD,CAAeF,MAAOZ,EAAKO,SAASM,OAAOC,cAEvG,sBACE,YAAC,IAAD,CAAkBT,GAAG,eAEvB,sBACGL,EAAKO,SAASM,OAAOE,KAAKC,KAAI,SAACC,EAAKC,GAAN,OAC7B,YAAC,OAAD,CAAMC,GAAIF,EAAIG,KAAMC,IAAKH,GACtBD,EAAIL","file":"component---src-templates-blog-post-tsx-95f28aadd28488650ad7.js","sourcesContent":["import styled from '@emotion/styled';\nimport { graphql, Link } from 'gatsby';\nimport React from 'react';\nimport { FormattedDate, FormattedMessage, FormattedTime, useIntl } from 'react-intl';\nimport { BlogPostPageQuery, SitePageContext } from '../../graphql-types';\nimport { DefaultLayout } from '../layouts/default';\nimport { PaddedElement } from '../layouts/default/PaddedElement';\n\nconst Post = styled.article`\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  grid-column-gap: 1rem;\n\n  h2 {\n    grid-column: 1 / 3;\n  }\n`;\n\nconst MetaInformation = styled.dl`\n  margin-top: 1rem;\n  font-size: 0.8rem;\n\n  dd a {\n    margin-right: 0.5rem;\n  }\n`;\n\ntype BlogPostProps = { data: BlogPostPageQuery; pageContext: SitePageContext };\n\nexport default function BlogPost({ data, pageContext }: BlogPostProps) {\n  const intl = useIntl();\n  const title = intl.formatMessage({ id: 'page.blogPost.title' }, { post: data.blogPost.frontmatter.title });\n  return (\n    <DefaultLayout pageContext={pageContext} title={title}>\n      <PaddedElement>\n        <Post>\n          <h2>{data.blogPost.frontmatter.title}</h2>\n          <div dangerouslySetInnerHTML={{ __html: data.blogPost.html }} />\n          <MetaInformation>\n            <dt>\n              <FormattedMessage id=\"misc.date\" />\n            </dt>\n            <dd>\n              <FormattedDate value={data.blogPost.fields.modifiedAt} /> <FormattedTime value={data.blogPost.fields.modifiedAt} />\n            </dd>\n            <dt>\n              <FormattedMessage id=\"misc.tags\" />\n            </dt>\n            <dd>\n              {data.blogPost.fields.tags.map((tag, i) => (\n                <Link to={tag.path} key={i}>\n                  {tag.value}\n                </Link>\n              ))}\n            </dd>\n          </MetaInformation>\n        </Post>\n      </PaddedElement>\n    </DefaultLayout>\n  );\n}\n\nexport const query = graphql`\n  query BlogPostPage($language: String, $slug: String) {\n    blogPost: markdownRemark(fields: { language: { eq: $language }, kind: { eq: \"blog\" }, slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n      fields {\n        path\n        modifiedAt\n        tags {\n          value\n          path\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}