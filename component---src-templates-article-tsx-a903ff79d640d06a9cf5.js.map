{"version":3,"sources":["webpack:///./src/templates/article.tsx"],"names":["Article","data","pageContext","title","useIntl","formatMessage","id","article","frontmatter","dangerouslySetInnerHTML","__html","html"],"mappings":"2FACA,6GAQe,SAASA,EAAT,GAAsD,IAAnCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,YAEhCC,EADOC,cACMC,cAAc,CAAEC,GAAI,uBACvC,OACE,YAAC,IAAD,CAAeJ,YAAaA,EAAaC,MAAOA,GAC9C,YAAC,IAAD,KACE,sBAAKF,EAAKM,QAAQC,YAAYL,OAC9B,mBAAKM,wBAAyB,CAAEC,OAAQT,EAAKM,QAAQI","file":"component---src-templates-article-tsx-a903ff79d640d06a9cf5.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport { ArticlePageQuery, SitePageContext } from '../../graphql-types';\nimport { DefaultLayout } from '../layouts/default';\nimport { PaddedElement } from '../layouts/default/PaddedElement';\n\ntype ArticleProps = { data: ArticlePageQuery; pageContext: SitePageContext };\n\nexport default function Article({ data, pageContext }: ArticleProps) {\n  const intl = useIntl();\n  const title = intl.formatMessage({ id: 'page.imprint.title' });\n  return (\n    <DefaultLayout pageContext={pageContext} title={title}>\n      <PaddedElement>\n        <h1>{data.article.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: data.article.html }} />\n      </PaddedElement>\n    </DefaultLayout>\n  );\n}\n\nexport const query = graphql`\n  query ArticlePage($language: String, $slug: String) {\n    article: markdownRemark(fields: { language: { eq: $language }, kind: { eq: \"articles\" }, slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}