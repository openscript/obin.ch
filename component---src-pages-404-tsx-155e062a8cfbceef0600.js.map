{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/styles/variables.ts","webpack:///./src/components/Content.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/translations/locales.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.tsx","webpack:///./src/styles/global.ts","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/Main.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/layouts/index.tsx","webpack:///./src/components/Page.tsx","webpack:///./src/components/Container.tsx"],"names":["NotFoundPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts__WEBPACK_IMPORTED_MODULE_5__","_components_Page__WEBPACK_IMPORTED_MODULE_3__","_components_Container__WEBPACK_IMPORTED_MODULE_4__","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","__webpack_require__","d","__webpack_exports__","dimensions","colors","fonts","baseSize","regular","large","layout","gutter","pageWidth","headerHeight","footerHeight","white","dark","red","orange","yellow","contra","sansSerif","StyledContent","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","StyledInnerContent","Content","_ref","children","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","data","query","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","GermanTranslation","EnglishTranslation","language","key","name","messages","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","StyledHeader","styled_base_browser_esm","HomepageLink","Link","styles","Header","title","core_browser_esm","react","globalStyles","css_browser_esm","LayoutRoot","StyledMain","Main","StyledFooter","StyledDivider","Footer","viewBox","points","IndexLayout","_ref$translation","translation","gatsby_browser_entry","index_es","locale","components_LayoutRoot","Helmet_default","site","siteMetadata","meta","content","description","keywords","lang","components_Header","components_Main","components_Footer","license","Date","buildTime","toISOString","_278654265","StyledPage","Page","StyledContainer","Container"],"mappings":"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","file":"component---src-pages-404-tsx-155e062a8cfbceef0600.js","sourcesContent":["import * as React from 'react'\nimport { Link } from 'gatsby'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport IndexLayout from '../layouts'\n\nconst NotFoundPage = () => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>404: Page not found.</h1>\n        <p>\n          You've hit the void. <Link to=\"/\">Go back.</Link>\n        </p>\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default NotFoundPage\n","/* eslint-disable max-len */\n\nexport const dimensions = {\n  baseSize: {\n    regular: '16px',\n    large: '18px'\n  },\n  layout: {\n    gutter: '1.5rem',\n    pageWidth: '80rem',\n    headerHeight: '8rem',\n    footerHeight: '5rem'\n  }\n}\n\nexport const colors = {\n  white: '#EEEEEE',\n  dark: '#6A4A3C',\n  red: '#CC333F',\n  orange: '#EB6841',\n  yellow: '#EDC951',\n  contra: '#00A0B0',\n}\n\nexport const fonts = {\n  sansSerif: \"'Roboto', 'Verdana', 'Ubuntu', sans-serif\"\n}\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions } from '../styles/variables'\n\nconst StyledContent = styled.div`\n  padding: ${dimensions.layout.gutter} calc((100vw - ${dimensions.layout.pageWidth}) / 2);\n`\n\nconst StyledInnerContent = styled.div`\n  padding: 0 ${dimensions.layout.gutter};\n`\n\ninterface ContentProps {\n  className?: string\n}\n\nconst Content: React.FC<ContentProps> = ({ children, className }) => (\n  <>\n    <StyledContent className={className}>\n      <StyledInnerContent>{children}</StyledInnerContent>\n    </StyledContent>\n  </>\n)\n\nexport default Content\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","export const Locales = {\n  de: { key: 'de', name: 'Deutsch' },\n  en: { key: 'en', name: 'English' }\n}\n\nexport interface Translation {\n  language: string\n  messages: { [key: string]: string }\n}\n\nexport const GermanTranslation: Translation = {\n  language: Locales.de.key,\n  messages: {\n    name: 'Deutsch'\n  }\n}\n\nexport const EnglishTranslation: Translation = {\n  language: Locales.en.key,\n  messages: {\n    name: 'Englisch'\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\nimport { dimensions, colors } from '../styles/variables'\nimport Content from './Content'\n\nconst StyledHeader = styled.header`\n  position: relative;\n  height: ${dimensions.layout.headerHeight};\n  background-color: ${colors.dark};\n`\n\nconst HomepageLink = styled(Link)`\n  color: white;\n  font-size: 1.5rem;\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n  }\n`\n\ninterface HeaderProps {\n  title: string\n}\n\nconst Header: React.FC<HeaderProps> = ({ title }) => (\n  <>\n    <StyledHeader>\n      <Content>\n        <HomepageLink to=\"/\">{title}</HomepageLink>\n      </Content>\n    </StyledHeader>\n  </>\n)\n\nexport default Header\n","import css from '@emotion/css';\nimport { dimensions, fonts } from './variables'\n\nexport const globalStyles = css`\n  html {\n    height: 100%;\n    font-size: ${dimensions.baseSize.regular};\n    font-family: ${fonts.sansSerif};\n  }\n\n  body {\n    display: flex;\n    min-height: 100%;\n    flex-direction: column;\n  }\n\n  #___gatsby,\n  #___gatsby > * {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n  }\n`\n","import * as React from 'react'\nimport { Global } from '@emotion/core'\nimport { globalStyles } from '../styles/global'\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.FC<LayoutRootProps> = ({ children }) => (\n  <>\n    <Global styles={globalStyles} />\n    {children}\n  </>\n)\n\nexport default LayoutRoot\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { colors } from '../styles/variables'\n\nconst StyledMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  background-color: ${colors.dark};\n`\n\ninterface MainProps {\n  className?: string\n}\n\nconst Main: React.FC<MainProps> = ({ children, className }) => (\n  <>\n    <StyledMain className={className}>{children}</StyledMain>\n  </>\n)\n\nexport default Main\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { dimensions, colors } from '../styles/variables'\nimport Content from './Content'\n\nconst StyledFooter = styled.footer`\n  height: ${dimensions.layout.footerHeight};\n  background-color: ${colors.orange};\n  display: flex;\n  align-items: center;\n`\n\nconst StyledDivider = styled.svg`\n  width: 100%;\n  background-color: ${colors.orange};\n\n  polygon {\n    fill: ${colors.dark};\n  }\n`\n\ninterface FooterProps {\n  className?: string\n}\n\nconst Footer: React.FC<FooterProps> = ({ className, children }) => (\n  <>\n    <StyledDivider viewBox=\"0 0 100 2\" className=\"topDivider\">\n      <polygon points=\"0 0, 100 0, 100 2, 80 0, 0 2\"></polygon>\n    </StyledDivider>\n    <StyledFooter className={className}>\n      <Content>{children}</Content>\n    </StyledFooter>\n  </>\n)\n\nexport default Footer\n","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'modern-normalize'\n\nimport Header from '../components/Header'\nimport LayoutRoot from '../components/LayoutRoot'\nimport Main from '../components/Main'\nimport Footer from '../components/Footer'\nimport { IntlProvider } from 'react-intl'\nimport { Translation, EnglishTranslation } from '../translations/locales'\n\ninterface StaticQueryProps {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n      keywords: string\n      license: string\n    }\n    buildTime: string\n  }\n}\n\ninterface Props {\n  translation?: Translation\n}\n\nconst IndexLayout: React.FC<Props> = ({ children, translation = EnglishTranslation }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n            keywords\n            license\n          }\n          buildTime\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <IntlProvider locale={translation.language} messages={translation.messages}>\n        <LayoutRoot>\n          <Helmet\n            title={data.site.siteMetadata.title}\n            meta={[\n              { name: 'description', content: data.site.siteMetadata.description },\n              { name: 'keywords', content: data.site.siteMetadata.keywords }\n            ]}\n          >\n            <html lang={translation.language} />\n          </Helmet>\n          <Header title={data.site.siteMetadata.title} />\n          <Main>{children}</Main>\n          <Footer>\n            {data.site.siteMetadata.license} - {new Date(data.site.buildTime).toISOString()}\n          </Footer>\n        </LayoutRoot>\n      </IntlProvider>\n    )}\n  />\n)\n\nexport default IndexLayout\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  margin-bottom: 3rem;\n`\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\n\nexport default Page\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n`\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.FC<ContainerProps> = ({ children, className }) => <StyledContainer className={className}>{children}</StyledContainer>\n\nexport default Container\n"],"sourceRoot":""}