{"version":3,"sources":["webpack:///./src/templates/articles.tsx","webpack:///./src/components/Card.tsx"],"names":["Articles","data","pageContext","title","useIntl","formatMessage","id","console","log","articles","edges","map","article","i","node","frontmatter","path","fields","key","excerpt","Card","children","to"],"mappings":"2FACA,yHASe,SAASA,EAAT,GAAwD,IAApCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,YAEjCC,EADOC,cACMC,cAAc,CAAEC,GAAI,wBAEvC,OADAC,QAAQC,IAAIP,GAEV,YAAC,IAAD,CAAeC,YAAaA,EAAaC,MAAOA,GAC9C,YAAC,IAAD,KACGF,EAAKQ,SAASC,MAAMC,KAAI,SAACC,EAASC,GAAV,OACvB,YAAC,IAAD,CAAMV,MAAOS,EAAQE,KAAKC,YAAYZ,MAAOa,KAAMJ,EAAQE,KAAKG,OAAOD,KAAME,IAAKL,GAC/ED,EAAQE,KAAKK,gB,kCCnB1B,0EASO,SAASC,EAAT,GAAoD,IAApCjB,EAAoC,EAApCA,MAAOkB,EAA6B,EAA7BA,SAAUL,EAAmB,EAAnBA,KACtC,OACE,uBACE,sBAAKA,EAAO,YAAC,OAAD,CAAMM,GAAIN,GAAOb,GAAgBA,GAC5CkB","file":"component---src-templates-articles-tsx-5b987a7a16297273e2fc.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport { ArticlesPageQuery, SitePageContext } from '../../graphql-types';\nimport { Card } from '../components/Card';\nimport { DefaultLayout } from '../layouts/default';\nimport { PaddedElement } from '../layouts/default/PaddedElement';\n\ntype ArticlesProps = { data: ArticlesPageQuery; pageContext: SitePageContext };\n\nexport default function Articles({ data, pageContext }: ArticlesProps) {\n  const intl = useIntl();\n  const title = intl.formatMessage({ id: 'page.articles.title' });\n  console.log(data);\n  return (\n    <DefaultLayout pageContext={pageContext} title={title}>\n      <PaddedElement>\n        {data.articles.edges.map((article, i) => (\n          <Card title={article.node.frontmatter.title} path={article.node.fields.path} key={i}>\n            {article.node.excerpt}\n          </Card>\n        ))}\n      </PaddedElement>\n    </DefaultLayout>\n  );\n}\n\nexport const query = graphql`\n  query ArticlesPage($language: String!, $skip: Int!, $limit: Int!) {\n    articles: allMarkdownRemark(\n      sort: { fields: fields___modifiedAt, order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: { fields: { language: { eq: $language }, kind: { eq: \"articles\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            path\n            modifiedAt\n          }\n          frontmatter {\n            title\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n","import { Link } from 'gatsby';\nimport React, { PropsWithChildren, ReactNode } from 'react';\n\ntype CardProps = PropsWithChildren<{\n  title: string;\n  path?: string;\n  titleComponent?: ReactNode;\n}>;\n\nexport function Card({ title, children, path }: CardProps) {\n  return (\n    <div>\n      <h3>{path ? <Link to={path}>{title}</Link> : title}</h3>\n      {children}\n    </div>\n  );\n}\n"],"sourceRoot":""}