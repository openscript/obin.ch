{"version":3,"sources":["webpack:///./src/templates/page.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Container.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Page.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.tsx","webpack:///./src/styles/variables.ts","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/Main.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/layouts/index.tsx"],"names":["PageTemplate","_ref","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts__WEBPACK_IMPORTED_MODULE_4__","_components_Page__WEBPACK_IMPORTED_MODULE_2__","_components_Container__WEBPACK_IMPORTED_MODULE_3__","markdownRemark","frontmatter","title","dangerouslySetInnerHTML","__html","html","query","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","StyledContainer","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","name","styles","Container","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","m","module","exports","require","default","StyledPage","Page","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","StyledHeader","styled_base_browser_esm","HeaderInner","HomepageLink","Link","Header","core_browser_esm","to","LayoutRoot","react","css","globalStyles","StyledMain","Main","Footer","IndexLayout","gatsby_browser_entry","components_LayoutRoot","Helmet_default","site","siteMetadata","meta","content","description","keywords","components_Header","components_Main","components_Footer","_3113665618"],"mappings":"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","file":"component---src-templates-page-tsx-8becc950f5067f0e6f13.js","sourcesContent":["import * as React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport IndexLayout from '../layouts'\n\ninterface PageTemplateProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        author: {\n          name: string\n          url: string\n        }\n      }\n    }\n    markdownRemark: {\n      html: string\n      excerpt: string\n      frontmatter: {\n        title: string\n      }\n    }\n  }\n}\n\nconst PageTemplate: React.FC<PageTemplateProps> = ({ data }) => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>{data.markdownRemark.frontmatter.title}</h1>\n        {/* eslint-disable-next-line react/no-danger */}\n        <div dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }} />\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default PageTemplate\n\nexport const query = graphql`\n  query PageTemplateQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n        author {\n          name\n          url\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n`\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.FC<ContainerProps> = ({ children, className }) => <StyledContainer className={className}>{children}</StyledContainer>\n\nexport default Container\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  margin-bottom: 3rem;\n`\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\n\nexport default Page\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\nimport { heights, dimensions, colors } from '../styles/variables'\nimport Container from './Container'\n\nconst StyledHeader = styled.header`\n  height: ${heights.header}px;\n  background-color: red;\n`\n\nconst HeaderInner = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 100%;\n`\n\nconst HomepageLink = styled(Link)`\n  color: ${colors.white};\n  font-size: 1.5rem;\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n  }\n`\n\ninterface HeaderProps {\n  title: string\n}\n\nconst Header: React.FC<HeaderProps> = ({ title }) => (\n  <StyledHeader>\n    <HeaderInner>\n      <HomepageLink to=\"/\">{title}</HomepageLink>\n    </HeaderInner>\n  </StyledHeader>\n)\n\nexport default Header\n","/* eslint-disable max-len */\n\nexport const colors = {\n  brand: '#663399',\n  lilac: '#9d7cbf',\n  accent: '#ffb238',\n  success: '#37b635',\n  warning: '#ec1818',\n  ui: {\n    bright: '#e0d6eb',\n    light: '#f5f3f7',\n    whisper: '#fbfafc'\n  },\n  code: '#fcf6f0',\n  gray: {\n    dark: 'hsla(270, 17.119554496%, 0%, 0.92)',\n    copy: 'hsla(270, 15.797828016000002%, 0%, 0.88)',\n    calm: 'rgba(0, 0, 0, 0.54)'\n  },\n  white: '#fff',\n  black: '#000'\n}\n\nexport const fonts = {\n  sansSerif:\n    '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", Arial, sans-serif',\n  serif: 'Georgia, \"Times New Roman\", Times, serif',\n  monospace: 'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace, monospace'\n}\n\nexport const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200\n}\n\nexport const widths = {\n  md: 720,\n  lg: 960,\n  xl: 1140\n}\n\nexport const dimensions = {\n  fontSize: {\n    regular: 16,\n    large: 18\n  },\n  headingSizes: {\n    h1: 2.441,\n    h2: 1.953,\n    h3: 1.563,\n    h4: 1.25\n  },\n  lineHeight: {\n    regular: 1.45,\n    heading: 1.2\n  },\n  containerPadding: 1.5\n}\n\nexport const heights = {\n  header: 60\n}\n","import * as React from 'react'\nimport { Global, css } from '@emotion/core'\nimport globalStyles from '../styles/global.module.scss'\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.FC<LayoutRootProps> = ({ children }) => (\n  <>\n    <Global styles={() => css(globalStyles)} />\n    {children}\n  </>\n)\n\nexport default LayoutRoot\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n`\n\ninterface MainProps {\n  className?: string\n}\n\nconst Main: React.FC<MainProps> = ({ children, className }) => <StyledMain className={className}>{children}</StyledMain>\n\nexport default Main\n","import * as React from 'react'\n\ninterface FooterProps {\n  className?: string\n}\n\nconst Footer: React.FC<FooterProps> = ({ className }) => <footer className={className}>Footer</footer>\n\nexport default Footer\n","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'modern-normalize'\n\nimport Header from '../components/Header'\nimport LayoutRoot from '../components/LayoutRoot'\nimport Main from '../components/Main'\nimport Footer from '../components/Footer'\n\ninterface StaticQueryProps {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n      keywords: string\n    }\n  }\n}\n\nconst IndexLayout: React.FC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n            keywords\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <LayoutRoot>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'keywords', content: data.site.siteMetadata.keywords }\n          ]}\n        />\n        <Header title={data.site.siteMetadata.title} />\n        <Main>{children}</Main>\n        <Footer />\n      </LayoutRoot>\n    )}\n  />\n)\n\nexport default IndexLayout\n"],"sourceRoot":""}